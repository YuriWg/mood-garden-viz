{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GardenContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1200px;\n  height: auto;\n  min-height: 600px;\n  background: ${props => props.theme.container.mainBg};\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  transition: height 0.3s ease;\n`;\n_c = GardenContainer;\nconst MoodGarden = ({\n  flowerData\n}) => {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState('warm');\n  const [isRandomView, setIsRandomView] = useState(true);\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n  const [selectedFlower, setSelectedFlower] = useState(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n\n  // 计算容器尺寸\n  useEffect(() => {\n    if (containerRef.current) {\n      const {\n        width\n      } = containerRef.current.getBoundingClientRect();\n      const height = width * SizeConfig.base.aspectRatio;\n      setDimensions({\n        width,\n        height\n      });\n    }\n    const handleResize = () => {\n      if (containerRef.current) {\n        const {\n          width\n        } = containerRef.current.getBoundingClientRect();\n        const height = width * SizeConfig.base.aspectRatio;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // 主题切换函数\n  const handleThemeChange = theme => {\n    setCurrentTheme(theme);\n  };\n\n  // 视图切换函数\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n\n  // 图例折叠切换\n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n\n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n  return /*#__PURE__*/_jsxDEV(GardenContainer, {\n    ref: containerRef,\n    theme: themeColors,\n    children: [/*#__PURE__*/_jsxDEV(FlowerView, {\n      flowerData: flowerData,\n      isRandomView: isRandomView,\n      currentTheme: currentTheme,\n      dimensions: dimensions,\n      selectedFlower: selectedFlower,\n      setSelectedFlower: setSelectedFlower\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      flowerData: flowerData,\n      currentTheme: currentTheme,\n      isCollapsed: isLegendCollapsed,\n      toggleLegend: toggleLegend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSelector, {\n      currentTheme: currentTheme,\n      onThemeChange: handleThemeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewToggle, {\n      isRandomView: isRandomView,\n      toggleView: toggleView,\n      currentTheme: currentTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodGarden, \"V93+jyzFIticXS/5tx1oVM8zx+M=\");\n_c2 = MoodGarden;\nexport default MoodGarden;\nvar _c, _c2;\n$RefreshReg$(_c, \"GardenContainer\");\n$RefreshReg$(_c2, \"MoodGarden\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","d3","colorThemes","SizeConfig","FlowerView","Legend","ThemeSelector","ViewToggle","jsxDEV","_jsxDEV","GardenContainer","div","props","theme","container","mainBg","_c","MoodGarden","flowerData","_s","currentTheme","setCurrentTheme","isRandomView","setIsRandomView","isLegendCollapsed","setIsLegendCollapsed","selectedFlower","setSelectedFlower","containerRef","dimensions","setDimensions","width","height","current","getBoundingClientRect","base","aspectRatio","handleResize","window","addEventListener","removeEventListener","handleThemeChange","toggleView","toggleLegend","themeColors","colors","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","isCollapsed","onThemeChange","_c2","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\n\nconst GardenContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1200px;\n  height: auto;\n  min-height: 600px;\n  background: ${props => props.theme.container.mainBg};\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  transition: height 0.3s ease;\n`;\n\nconst MoodGarden = ({ flowerData }) => {\n  const [currentTheme, setCurrentTheme] = useState('warm');\n  const [isRandomView, setIsRandomView] = useState(true);\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n  const [selectedFlower, setSelectedFlower] = useState(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  // 计算容器尺寸\n  useEffect(() => {\n    if (containerRef.current) {\n      const { width } = containerRef.current.getBoundingClientRect();\n      const height = width * SizeConfig.base.aspectRatio;\n      setDimensions({ width, height });\n    }\n    \n    const handleResize = () => {\n      if (containerRef.current) {\n        const { width } = containerRef.current.getBoundingClientRect();\n        const height = width * SizeConfig.base.aspectRatio;\n        setDimensions({ width, height });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // 主题切换函数\n  const handleThemeChange = (theme) => {\n    setCurrentTheme(theme);\n  };\n\n  // 视图切换函数\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n\n  // 图例折叠切换\n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n\n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n\n  return (\n    <GardenContainer ref={containerRef} theme={themeColors}>\n      <FlowerView \n        flowerData={flowerData}\n        isRandomView={isRandomView}\n        currentTheme={currentTheme}\n        dimensions={dimensions}\n        selectedFlower={selectedFlower}\n        setSelectedFlower={setSelectedFlower}\n      />\n      \n      <Legend \n        flowerData={flowerData}\n        currentTheme={currentTheme}\n        isCollapsed={isLegendCollapsed}\n        toggleLegend={toggleLegend}\n      />\n      \n      <ThemeSelector \n        currentTheme={currentTheme}\n        onThemeChange={handleThemeChange}\n      />\n      \n      <ViewToggle \n        isRandomView={isRandomView}\n        toggleView={toggleView}\n        currentTheme={currentTheme}\n      />\n    </GardenContainer>\n  );\n};\n\nexport default MoodGarden;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}