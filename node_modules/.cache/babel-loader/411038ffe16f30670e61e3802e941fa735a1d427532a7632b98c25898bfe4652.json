{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GardenContainer = styled.div`\n  position: relative; // 保持相对定位\n  width: 100%;\n  max-width: 1000px;\n  height: auto;\n  min-height: 400px;\n  background: ${props => props.theme.container.mainBg};\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  overflow: visible;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 10px;\n`;\n\n// {{ 修改控件容器样式 }}\n_c = GardenContainer;\nconst ControlsContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 300px;\n  display: flex;\n  gap: 20px; // 按钮之间的间距\n  z-index: 100; // 确保控件始终在顶层\n`;\n\n// {{ 主内容容器添加上边距，为固定定位的控件留出空间 }}\n_c2 = ControlsContainer;\nconst MainContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  width: 100%;\n  margin-top: 0px; // 为顶部固定的控件留出空间\n`;\n\n// {{ 新增：FlowerView 的包装容器，使其占据主要空间 }}\n_c3 = MainContentContainer;\nconst FlowerViewWrapper = styled.div`\n  flex: 1; // {{ 占据大部分可用空间 }}\n  min-width: 0; // {{ 对于 flex 子项是必要的，防止内容溢出 }}\n  position: relative; // {{ FlowerView 内部可能依赖相对定位 }}\n`;\n_c4 = FlowerViewWrapper;\nconst MoodGarden = ({\n  flowerData,\n  currentTheme,\n  setCurrentTheme\n}) => {\n  _s();\n  const [isRandomView, setIsRandomView] = useState(true);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [selectedFlower, setSelectedFlower] = useState(null);\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n\n  // 在这里添加一个日志，检查传入的数据\n  useEffect(() => {\n    console.log(\"Received flowerData:\", flowerData);\n  }, [flowerData]);\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n  const themeColors = colorThemes[currentTheme].colors;\n  return /*#__PURE__*/_jsxDEV(GardenContainer, {\n    theme: themeColors,\n    children: [/*#__PURE__*/_jsxDEV(ControlsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ThemeSelector, {\n        currentTheme: currentTheme,\n        onThemeChange: setCurrentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ViewToggle, {\n        isRandomView: isRandomView,\n        toggleView: toggleView,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FlowerViewWrapper, {\n        children: flowerData && flowerData.length > 0 ? /*#__PURE__*/_jsxDEV(FlowerView, {\n          flowerData: flowerData,\n          isRandomView: isRandomView,\n          currentTheme: currentTheme,\n          dimensions: dimensions,\n          setDimensions: setDimensions,\n          selectedFlower: selectedFlower,\n          setSelectedFlower: setSelectedFlower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '50px',\n            textAlign: 'center',\n            color: themeColors.text.primary\n          },\n          children: \"\\u6CA1\\u6709\\u53EF\\u663E\\u793A\\u7684\\u5FC3\\u60C5\\u6570\\u636E\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Legend, {\n          flowerData: flowerData,\n          currentTheme: currentTheme,\n          isCollapsed: isLegendCollapsed,\n          toggleLegend: toggleLegend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodGarden, \"ppi9+xDarx+Ym/Uhk+Hy89ZxcMk=\");\n_c5 = MoodGarden;\nexport default MoodGarden;\n\n// Note: You might need to adjust the import alias if Legend is already aliased.\n// e.g., import { default as OriginalLegend } from './Legend'; \n// You might need to adjust the name 'OriginalLegend' based on your actual import.\n\n// {{ 新增：Legend 的包装容器，用于添加间距 }}\nconst LegendWrapper = styled.div`\n  margin-left: 25px; // {{ 添加左外边距，例如 25px，可调整 }}\n  // {{ 你可能还需要为 Legend 设置一个基础宽度或 flex-basis }}\n  // flex-basis: 280px; // 例如，给图例一个固定的基础宽度\n  // flex-shrink: 0; // 防止图例在空间不足时被压缩\n`;\n_c6 = LegendWrapper;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"GardenContainer\");\n$RefreshReg$(_c2, \"ControlsContainer\");\n$RefreshReg$(_c3, \"MainContentContainer\");\n$RefreshReg$(_c4, \"FlowerViewWrapper\");\n$RefreshReg$(_c5, \"MoodGarden\");\n$RefreshReg$(_c6, \"LegendWrapper\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","d3","colorThemes","SizeConfig","FlowerView","Legend","ThemeSelector","ViewToggle","jsxDEV","_jsxDEV","GardenContainer","div","props","theme","container","mainBg","_c","ControlsContainer","_c2","MainContentContainer","_c3","FlowerViewWrapper","_c4","MoodGarden","flowerData","currentTheme","setCurrentTheme","_s","isRandomView","setIsRandomView","dimensions","setDimensions","width","height","selectedFlower","setSelectedFlower","isLegendCollapsed","setIsLegendCollapsed","console","log","toggleView","toggleLegend","themeColors","colors","children","onThemeChange","fileName","_jsxFileName","lineNumber","columnNumber","length","style","padding","textAlign","color","text","primary","LegendWrapper","isCollapsed","_c5","_c6","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\n\nconst GardenContainer = styled.div`\n  position: relative; // 保持相对定位\n  width: 100%;\n  max-width: 1000px;\n  height: auto;\n  min-height: 400px;\n  background: ${props => props.theme.container.mainBg};\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  overflow: visible;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 10px;\n`;\n\n// {{ 修改控件容器样式 }}\nconst ControlsContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 300px;\n  display: flex;\n  gap: 20px; // 按钮之间的间距\n  z-index: 100; // 确保控件始终在顶层\n`;\n\n// {{ 主内容容器添加上边距，为固定定位的控件留出空间 }}\nconst MainContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  width: 100%;\n  margin-top: 0px; // 为顶部固定的控件留出空间\n`;\n\n// {{ 新增：FlowerView 的包装容器，使其占据主要空间 }}\nconst FlowerViewWrapper = styled.div`\n  flex: 1; // {{ 占据大部分可用空间 }}\n  min-width: 0; // {{ 对于 flex 子项是必要的，防止内容溢出 }}\n  position: relative; // {{ FlowerView 内部可能依赖相对定位 }}\n`;\n\n\nconst MoodGarden = ({ flowerData, currentTheme, setCurrentTheme }) => {\n  const [isRandomView, setIsRandomView] = useState(true);\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [selectedFlower, setSelectedFlower] = useState(null); \n\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n  \n  // 在这里添加一个日志，检查传入的数据\n  useEffect(() => {\n    console.log(\"Received flowerData:\", flowerData);\n  }, [flowerData]);\n\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n  \n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n  \n  const themeColors = colorThemes[currentTheme].colors;\n  return (\n    <GardenContainer theme={themeColors}>\n      <ControlsContainer>\n        <ThemeSelector \n          currentTheme={currentTheme} \n          onThemeChange={setCurrentTheme} \n        />\n        <ViewToggle \n          isRandomView={isRandomView} \n          toggleView={toggleView} \n          currentTheme={currentTheme}\n        />\n      </ControlsContainer>\n\n      <MainContentContainer>\n        <FlowerViewWrapper>\n          {flowerData && flowerData.length > 0 ? (\n            <FlowerView \n              flowerData={flowerData}\n              isRandomView={isRandomView}\n              currentTheme={currentTheme}\n              dimensions={dimensions}\n              setDimensions={setDimensions}\n              selectedFlower={selectedFlower}\n              setSelectedFlower={setSelectedFlower}\n            />\n          ) : (\n            <div style={{ padding: '50px', textAlign: 'center', color: themeColors.text.primary }}>\n              没有可显示的心情数据。\n            </div>\n          )}\n        </FlowerViewWrapper>\n        \n        <LegendWrapper>\n          <Legend \n            flowerData={flowerData} \n            currentTheme={currentTheme}\n            isCollapsed={isLegendCollapsed}\n            toggleLegend={toggleLegend}\n          />\n        </LegendWrapper>\n      </MainContentContainer>\n    </GardenContainer>\n  );\n};\n\nexport default MoodGarden;\n\n// Note: You might need to adjust the import alias if Legend is already aliased.\n// e.g., import { default as OriginalLegend } from './Legend'; \n// You might need to adjust the name 'OriginalLegend' based on your actual import.\n\n// {{ 新增：Legend 的包装容器，用于添加间距 }}\nconst LegendWrapper = styled.div`\n  margin-left: 25px; // {{ 添加左外边距，例如 25px，可调整 }}\n  // {{ 你可能还需要为 Legend 设置一个基础宽度或 flex-basis }}\n  // flex-basis: 280px; // 例如，给图例一个固定的基础宽度\n  // flex-shrink: 0; // 防止图例在空间不足时被压缩\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}