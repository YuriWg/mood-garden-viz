{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodGarden = ({\n  flowerData,\n  currentTheme,\n  setCurrentTheme\n}) => {\n  _s();\n  const [isRandomView, setIsRandomView] = useState(true);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [selectedFlower, setSelectedFlower] = useState(null);\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n\n  // 在这里添加一个日志，检查传入的数据\n  useEffect(() => {\n    console.log(\"Received flowerData:\", flowerData);\n  }, [flowerData]);\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n  const themeColors = colorThemes[currentTheme].colors;\n  return /*#__PURE__*/_jsxDEV(GardenContainer, {\n    theme: themeColors,\n    children: [/*#__PURE__*/_jsxDEV(ThemeSelector, {\n      currentTheme: currentTheme,\n      onThemeChange: setCurrentTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewToggle, {\n      isRandomView: isRandomView,\n      toggleView: toggleView,\n      currentTheme: currentTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), flowerData && flowerData.length > 0 ? /*#__PURE__*/_jsxDEV(FlowerView, {\n      flowerData: flowerData,\n      isRandomView: isRandomView,\n      currentTheme: currentTheme,\n      dimensions: dimensions,\n      setDimensions: setDimensions,\n      selectedFlower: selectedFlower,\n      setSelectedFlower: setSelectedFlower\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 如果没有数据，显示提示信息\n    _jsxDEV(\"div\", {\n      style: {\n        padding: '50px',\n        textAlign: 'center',\n        color: themeColors.text.primary\n      },\n      children: \"\\u6CA1\\u6709\\u53EF\\u663E\\u793A\\u7684\\u5FC3\\u60C5\\u6570\\u636E\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      flowerData: flowerData,\n      currentTheme: currentTheme,\n      isCollapsed: isLegendCollapsed,\n      toggleLegend: toggleLegend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodGarden, \"ppi9+xDarx+Ym/Uhk+Hy89ZxcMk=\");\n_c = MoodGarden;\nexport default MoodGarden;\nvar _c;\n$RefreshReg$(_c, \"MoodGarden\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","d3","colorThemes","SizeConfig","FlowerView","Legend","ThemeSelector","ViewToggle","jsxDEV","_jsxDEV","MoodGarden","flowerData","currentTheme","setCurrentTheme","_s","isRandomView","setIsRandomView","dimensions","setDimensions","width","height","selectedFlower","setSelectedFlower","isLegendCollapsed","setIsLegendCollapsed","console","log","toggleView","toggleLegend","themeColors","colors","GardenContainer","theme","children","onThemeChange","fileName","_jsxFileName","lineNumber","columnNumber","length","style","padding","textAlign","color","text","primary","isCollapsed","_c","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\n\n\n\nconst MoodGarden = ({ flowerData, currentTheme, setCurrentTheme }) => {\n  const [isRandomView, setIsRandomView] = useState(true);\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [selectedFlower, setSelectedFlower] = useState(null); \n\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n  \n  // 在这里添加一个日志，检查传入的数据\n  useEffect(() => {\n    console.log(\"Received flowerData:\", flowerData);\n  }, [flowerData]);\n\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n  \n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n  \n  const themeColors = colorThemes[currentTheme].colors;\n  return (\n    <GardenContainer theme={themeColors}>\n      <ThemeSelector \n        currentTheme={currentTheme} \n        onThemeChange={setCurrentTheme} \n      />\n      <ViewToggle \n        isRandomView={isRandomView} \n        toggleView={toggleView} \n        currentTheme={currentTheme}\n      />\n\n      {/* 添加条件渲染：检查 flowerData 是否有效 */}\n      {flowerData && flowerData.length > 0 ? (\n        <FlowerView \n          flowerData={flowerData}\n          isRandomView={isRandomView}\n          currentTheme={currentTheme}\n          dimensions={dimensions}\n          setDimensions={setDimensions}\n          selectedFlower={selectedFlower}\n          setSelectedFlower={setSelectedFlower}\n        />\n      ) : (\n        // 如果没有数据，显示提示信息\n        <div style={{ padding: '50px', textAlign: 'center', color: themeColors.text.primary }}>\n          没有可显示的心情数据。\n        </div>\n      )}\n\n      <Legend \n        flowerData={flowerData} \n        currentTheme={currentTheme}\n        isCollapsed={isLegendCollapsed}\n        toggleLegend={toggleLegend}\n      />\n    </GardenContainer>\n  );\n};\n\nexport default MoodGarden;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}