{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GardenContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1200px;\n  height: auto;\n  min-height: 600px;\n  background: ${props => props.theme.container.mainBg};\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  transition: height 0.3s ease;\n`;\n_c = GardenContainer;\nconst MoodGarden = ({\n  flowerData,\n  currentTheme,\n  setCurrentTheme\n}) => {\n  _s();\n  const [isRandomView, setIsRandomView] = useState(true);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [selectedFlower, setSelectedFlower] = useState(null); // Add this line\n\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n  const themeColors = colorThemes[currentTheme].colors;\n  return /*#__PURE__*/_jsxDEV(GardenContainer, {\n    theme: themeColors,\n    children: [/*#__PURE__*/_jsxDEV(ThemeSelector, {\n      currentTheme: currentTheme,\n      onThemeChange: setCurrentTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewToggle, {\n      isRandomView: isRandomView,\n      toggleView: toggleView,\n      currentTheme: currentTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FlowerView, {\n        flowerData: flowerData,\n        isRandomView: isRandomView,\n        currentTheme: currentTheme,\n        dimensions: dimensions,\n        setDimensions: setDimensions,\n        selectedFlower: selectedFlower,\n        setSelectedFlower: setSelectedFlower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      flowerData: flowerData,\n      currentTheme: currentTheme,\n      isCollapsed: isLegendCollapsed,\n      toggleLegend: toggleLegend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodGarden, \"Lplpwg6QjFoNY4JZ/cch23PIzJA=\");\n_c2 = MoodGarden;\nexport default MoodGarden;\nvar _c, _c2;\n$RefreshReg$(_c, \"GardenContainer\");\n$RefreshReg$(_c2, \"MoodGarden\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","d3","colorThemes","SizeConfig","FlowerView","Legend","ThemeSelector","ViewToggle","jsxDEV","_jsxDEV","GardenContainer","div","props","theme","container","mainBg","_c","MoodGarden","flowerData","currentTheme","setCurrentTheme","_s","isRandomView","setIsRandomView","dimensions","setDimensions","width","height","selectedFlower","setSelectedFlower","isLegendCollapsed","setIsLegendCollapsed","toggleView","toggleLegend","themeColors","colors","children","onThemeChange","fileName","_jsxFileName","lineNumber","columnNumber","Container","isCollapsed","_c2","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/MoodGarden.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport FlowerView from './FlowerView';\nimport Legend from './Legend';\nimport ThemeSelector from './ThemeSelector';\nimport ViewToggle from './ViewToggle';\n\nconst GardenContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1200px;\n  height: auto;\n  min-height: 600px;\n  background: ${props => props.theme.container.mainBg};\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  transition: height 0.3s ease;\n`;\n\nconst MoodGarden = ({ flowerData, currentTheme, setCurrentTheme }) => {\n  const [isRandomView, setIsRandomView] = useState(true);\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [selectedFlower, setSelectedFlower] = useState(null); // Add this line\n\n  const [isLegendCollapsed, setIsLegendCollapsed] = useState(false);\n  \n  const toggleView = () => {\n    setIsRandomView(!isRandomView);\n  };\n  \n  const toggleLegend = () => {\n    setIsLegendCollapsed(!isLegendCollapsed);\n  };\n  \n  const themeColors = colorThemes[currentTheme].colors;\n  return (\n    <GardenContainer theme={themeColors}>\n      <ThemeSelector \n        currentTheme={currentTheme} \n        onThemeChange={setCurrentTheme} \n      />\n      <ViewToggle \n        isRandomView={isRandomView} \n        toggleView={toggleView} \n        currentTheme={currentTheme}\n      />\n      <Container>\n        <FlowerView \n          flowerData={flowerData}\n          isRandomView={isRandomView}\n          currentTheme={currentTheme}\n          dimensions={dimensions}\n          setDimensions={setDimensions}\n          selectedFlower={selectedFlower}\n          setSelectedFlower={setSelectedFlower}\n        />\n      </Container>\n      <Legend \n        flowerData={flowerData} \n        currentTheme={currentTheme}\n        isCollapsed={isLegendCollapsed}\n        toggleLegend={toggleLegend}\n      />\n    </GardenContainer>\n  );\n};\n\nexport default MoodGarden;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}