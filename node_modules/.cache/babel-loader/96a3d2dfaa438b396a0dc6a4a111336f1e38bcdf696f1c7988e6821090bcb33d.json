{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MoodGarden from './components/MoodGarden';\nimport { GlobalStyle } from './styles/GlobalStyles';\nimport { generateMockData } from './data/mockData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  font-family: 'Chelsea Market', cursive;\n  font-size: 2.5rem;\n  color: #543A29;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n_c2 = Title;\nfunction App() {\n  _s();\n  const [flowerData, setFlowerData] = useState([]);\n  useEffect(() => {\n    // 在实际应用中，这里会从API获取数据\n    // 现在我们使用模拟数据\n    const data = generateMockData();\n    setFlowerData(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"2025 Mood Garden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoodGarden, {\n        flowerData: flowerData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"6iRvs22WYvjrJ8M0X2u0ccWnJKA=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","MoodGarden","GlobalStyle","generateMockData","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","div","_c","Title","h1","_c2","App","_s","flowerData","setFlowerData","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MoodGarden from './components/MoodGarden';\nimport { GlobalStyle } from './styles/GlobalStyles';\nimport { generateMockData } from './data/mockData';\n\nconst AppContainer = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n\nconst Title = styled.h1`\n  font-family: 'Chelsea Market', cursive;\n  font-size: 2.5rem;\n  color: #543A29;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nfunction App() {\n  const [flowerData, setFlowerData] = useState([]);\n  \n  useEffect(() => {\n    // 在实际应用中，这里会从API获取数据\n    // 现在我们使用模拟数据\n    const data = generateMockData();\n    setFlowerData(data);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      <AppContainer>\n        <Title>2025 Mood Garden</Title>\n        <MoodGarden flowerData={flowerData} />\n      </AppContainer>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,YAAY,GAAGR,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,YAAY;AAWlB,MAAMG,KAAK,GAAGX,MAAM,CAACY,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,KAAK;AAQX,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMmB,IAAI,GAAGf,gBAAgB,CAAC,CAAC;IAC/Bc,aAAa,CAACC,IAAI,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACH,WAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACflB,OAAA,CAACG,YAAY;MAAAW,QAAA,gBACXd,OAAA,CAACM,KAAK;QAAAQ,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/BlB,OAAA,CAACJ,UAAU;QAACe,UAAU,EAAEA;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACf,CAAC;AAEP;AAACR,EAAA,CAnBQD,GAAG;AAAAU,GAAA,GAAHV,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}