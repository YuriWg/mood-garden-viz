{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/FlowerView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport { Utils } from '../utils/flowerUtils';\nimport Tooltip from './Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SVGContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = SVGContainer;\nconst FlowerView = ({\n  flowerData,\n  isRandomView,\n  currentTheme,\n  dimensions,\n  selectedFlower,\n  setSelectedFlower\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n\n  // 获取颜色比例尺\n  const getColorScale = () => {\n    const theme = colorThemes[currentTheme];\n    return d3.scaleLinear().domain([-5, -2.5, 0, 2.5, 5]).range([theme.colors.petals.negative[0], theme.colors.petals.negative[2], theme.colors.petals.neutral, theme.colors.petals.positive[2], theme.colors.petals.positive[0]]).interpolate(d3.interpolateHcl);\n  };\n\n  // 获取花朵颜色\n  const getColor = score => {\n    return getColorScale()(score);\n  };\n\n  // 获取花芯颜色\n  const getFlowerCenterColor = score => {\n    const centers = themeColors.centers;\n    if (score >= 4) return centers.positive;\n    if (score >= 2) return centers.highPositive;\n    if (score > 0) return centers.lowPositive;\n    if (score === 0) return centers.neutral;\n    if (score > -2) return centers.lowNegative;\n    if (score > -4) return centers.highNegative;\n    return centers.negative;\n  };\n\n  // 处理鼠标悬停事件\n  const handleMouseOver = (event, flower) => {\n    setTooltipData(flower);\n    const {\n      clientX,\n      clientY\n    } = event;\n    setTooltipPosition({\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    setTooltipPosition({\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  // 处理鼠标离开事件\n  const handleMouseOut = () => {\n    setTooltipData(null);\n  };\n\n  // 绘制花朵\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !flowerData.length) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // 设置视图框\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n\n    // 添加标题\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", SizeConfig.base.titlePadding / 2).attr(\"class\", \"title-text\").attr(\"text-anchor\", \"middle\").attr(\"dominant-baseline\", \"hanging\").style(\"fill\", themeColors.text.title).style(\"font-family\", \"'Chelsea Market', cursive\").style(\"font-size\", \"75px\").style(\"font-weight\", \"800\").style(\"letter-spacing\", \"0.02em\").style(\"opacity\", \"0.8\").text(\"2025 Mood Garden\");\n\n    // 根据视图模式绘制花朵\n    if (isRandomView) {\n      drawRandomFlowers(svg, flowerData);\n    } else {\n      drawCalendarFlowers(svg, flowerData);\n    }\n  }, [flowerData, dimensions, isRandomView, currentTheme]);\n\n  // 绘制随机分布的花朵\n  const drawRandomFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n\n    // 创建花朵和绿叶容器\n    const flowerContainer = svg.append(\"g\").attr(\"class\", \"flower-container\");\n\n    // 添加背景绿叶\n    drawBackgroundLeaves(flowerContainer, width / 2, titlePadding + (height - titlePadding) * 0.5);\n\n    // 设置可用区域\n    const viewWidth = width;\n    const viewHeight = height;\n    const usableWidth = viewWidth * 0.8;\n    const usableHeight = viewHeight - titlePadding * 1.5;\n    const marginX = (viewWidth - usableWidth) / 2;\n    const marginY = titlePadding;\n\n    // 使用简单的力布局算法确保花朵不会重叠\n    const flowerPositions = [];\n    const minDistance = 50; // 花朵之间的最小距离\n\n    flowers.forEach((flower, i) => {\n      // 生成随机位置\n      let x,\n        y,\n        attempts = 0;\n      let validPosition = false;\n\n      // 尝试多次找到不重叠的位置\n      while (!validPosition && attempts < 30) {\n        x = marginX + Math.random() * usableWidth;\n        y = marginY + Math.random() * usableHeight;\n\n        // 检查与现有花朵的距离\n        validPosition = true;\n        for (const pos of flowerPositions) {\n          const dx = x - pos.x;\n          const dy = y - pos.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < minDistance) {\n            validPosition = false;\n            break;\n          }\n        }\n        attempts++;\n      }\n\n      // 保存位置\n      flower.x = x;\n      flower.y = y;\n      flowerPositions.push({\n        x,\n        y\n      });\n\n      // 创建花朵\n      const flowerG = flowerContainer.append(\"g\").attr(\"class\", \"flower-base\").attr(\"transform\", `translate(${x}, ${y})`);\n\n      // 添加动画层\n      const animationLayer = flowerG.append(\"g\").attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`).style(\"animation-delay\", `${Math.random() * 2}s`);\n\n      // 绘制花瓣\n      drawFlowerPetals(animationLayer, flower);\n\n      // 添加事件处理\n      flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut);\n    });\n  };\n\n  // 绘制背景绿叶\n  const drawBackgroundLeaves = (container, centerX, centerY) => {\n    const leafCount = Math.floor(flowerData.length * 1.8);\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n\n    // 利用整个容器空间\n    const usableWidth = width * 0.9;\n    const usableHeight = height - titlePadding * 1.5;\n    const marginX = (width - usableWidth) / 2;\n    const marginY = titlePadding + 20;\n    const leaves = Array.from({\n      length: leafCount\n    }, (_, i) => {\n      return {\n        x: marginX + Math.random() * usableWidth,\n        y: marginY + Math.random() * usableHeight,\n        size: 12 + Math.random() * 20,\n        angle: Math.random() * 360,\n        id: i\n      };\n    });\n    const leafGroup = container.append(\"g\").attr(\"class\", \"leaf-group\");\n    leaves.forEach(leaf => {\n      const leafColors = [\"rgba(76, 175, 80, 0.6)\", \"rgba(67, 160, 71, 0.5)\", \"rgba(56, 142, 60, 0.4)\", \"rgba(46, 125, 50, 0.3)\"];\n      const leafG = leafGroup.append(\"g\").attr(\"class\", \"leaf-base\").attr(\"transform\", `translate(${leaf.x}, ${leaf.y})`);\n      const leafAnimLayer = leafG.append(\"g\").attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`).style(\"animation-delay\", `${Math.random() * 3}s`).style(\"animation-duration\", `${7 + Math.random() * 4}s`);\n      leafAnimLayer.append(\"path\").attr(\"d\", Utils.generateLeaf(leaf.size)).attr(\"fill\", leafColors[Math.floor(Math.random() * leafColors.length)]).attr(\"transform\", `rotate(${leaf.angle})`).attr(\"opacity\", 0.5 + Math.random() * 0.3);\n    });\n  };\n\n  // 绘制花瓣\n  const drawFlowerPetals = (container, flower) => {\n    const size = SizeConfig.calculateFlowerSize(flower.score, true);\n    const petals = Array.from({\n      length: SizeConfig.flower.petalCount\n    }, (_, j) => {\n      const angle = j * (360 / SizeConfig.flower.petalCount);\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.95' : '1'}\"\n            ${flower.score === 0 ? 'stroke=\"#AAA\" stroke-width=\"0.5\"' : ''}/>\n      `;\n    }).join('');\n\n    // 添加花瓣到动画层\n    container.html(petals);\n\n    // 添加花芯\n    container.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", 1.5);\n  };\n\n  // 绘制日历视图的花朵\n  const drawCalendarFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // 增加边距使花朵分布更加均匀\n    const leftMargin = 100;\n    const topMargin = titlePadding * 1.4;\n    const bottomMargin = titlePadding / 5;\n    const rightMargin = 100;\n\n    // 计算可用宽度和高度\n    const usableWidth = width - leftMargin - rightMargin;\n    const usableHeight = height - topMargin - bottomMargin;\n\n    // 计算月份和日期的间距\n    const monthWidth = usableWidth / 12;\n    const startY = topMargin;\n    const daySpacing = usableHeight / 31;\n\n    // 添加背景网格辅助线\n    const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n\n    // 月份分隔线\n    for (let i = 0; i <= 12; i++) {\n      gridGroup.append(\"line\").attr(\"class\", \"grid-line\").attr(\"x1\", leftMargin + i * monthWidth).attr(\"y1\", topMargin - 20).attr(\"x2\", leftMargin + i * monthWidth).attr(\"y2\", topMargin + 31 * daySpacing).style(\"stroke\", \"rgba(0,0,0,0.05)\").style(\"stroke-width\", i % 3 === 0 ? 1 : 0.5);\n    }\n\n    // 每5天的水平分隔线\n    for (let i = 0; i <= 31; i += 5) {\n      gridGroup.append(\"line\").attr(\"class\", \"grid-line\").attr(\"x1\", leftMargin - 10).attr(\"y1\", topMargin + i * daySpacing).attr(\"x2\", leftMargin + 12 * monthWidth).attr(\"y2\", topMargin + i * daySpacing).style(\"stroke\", \"rgba(0,0,0,0.05)\").style(\"stroke-width\", i % 10 === 0 ? 1 : 0.5);\n    }\n\n    // 添加月份标签\n    months.forEach((month, i) => {\n      const x = leftMargin + i * monthWidth + monthWidth / 2;\n      svg.append(\"text\").attr(\"x\", x).attr(\"y\", startY - 40).attr(\"class\", \"month-text\").attr(\"text-anchor\", \"middle\").style(\"font-family\", \"'Montserrat', sans-serif\").style(\"font-size\", \"20px\").style(\"font-weight\", \"bold\").style(\"opacity\", \"0.6\").style(\"fill\", themeColors.text.secondary).text(month);\n    });\n\n    // 添加日期标签\n    for (let day = 1; day <= 31; day++) {\n      const formattedDay = day < 10 ? `0${day}` : `${day}`;\n      svg.append(\"text\").attr(\"x\", leftMargin - 20).attr(\"y\", startY + (day - 1) * daySpacing).attr(\"class\", \"day-text\").attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"middle\").style(\"font-family\", \"'Montserrat', sans-serif\").style(\"font-size\", \"18px\").style(\"font-weight\", \"500\").style(\"opacity\", \"0.6\").style(\"fill\", themeColors.text.secondary).text(formattedDay);\n    }\n\n    // 创建花朵\n    flowers.forEach(flower => {\n      const x = leftMargin + flower.month * monthWidth + monthWidth / 2;\n      const y = startY + (flower.day - 1) * daySpacing;\n      const flowerG = svg.append(\"g\").attr(\"class\", \"flower\").attr(\"transform\", `translate(${x},${y}) scale(1)`);\n\n      // 绘制花瓣\n      const size = SizeConfig.calculateFlowerSize(flower.score, false);\n      const petals = Array.from({\n        length: 8\n      }, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"0.9\"/>\n        `;\n      }).join('');\n      flowerG.html(petals);\n\n      // 添加花芯\n      flowerG.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", flower.score === 0 ? 2 : 1.8);\n\n      // 添加事件处理\n      flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SVGContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"100%\",\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), tooltipData && /*#__PURE__*/_jsxDEV(Tooltip, {\n      data: tooltipData,\n      position: tooltipPosition,\n      themeColors: themeColors,\n      getColor: getColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 393,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowerView, \"Jr0qRXYuw6yHZVZN0QNyS5n9psc=\");\n_c2 = FlowerView;\nexport default FlowerView;\nvar _c, _c2;\n$RefreshReg$(_c, \"SVGContainer\");\n$RefreshReg$(_c2, \"FlowerView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","d3","colorThemes","SizeConfig","Utils","Tooltip","jsxDEV","_jsxDEV","SVGContainer","div","_c","FlowerView","flowerData","isRandomView","currentTheme","dimensions","selectedFlower","setSelectedFlower","_s","svgRef","tooltipData","setTooltipData","tooltipPosition","setTooltipPosition","x","y","themeColors","colors","getColorScale","theme","scaleLinear","domain","range","petals","negative","neutral","positive","interpolate","interpolateHcl","getColor","score","getFlowerCenterColor","centers","highPositive","lowPositive","lowNegative","highNegative","handleMouseOver","event","flower","clientX","clientY","handleMouseMove","handleMouseOut","current","width","length","svg","select","selectAll","remove","base","height","calculateContainerHeight","attr","append","titlePadding","style","text","title","drawRandomFlowers","drawCalendarFlowers","flowers","flowerContainer","drawBackgroundLeaves","viewWidth","viewHeight","usableWidth","usableHeight","marginX","marginY","flowerPositions","minDistance","forEach","i","attempts","validPosition","Math","random","pos","dx","dy","distance","sqrt","push","flowerG","animationLayer","floor","drawFlowerPetals","on","container","centerX","centerY","leafCount","leaves","Array","from","_","size","angle","id","leafGroup","leaf","leafColors","leafG","leafAnimLayer","generateLeaf","calculateFlowerSize","petalCount","j","generatePetal","join","html","centerRatio","months","leftMargin","topMargin","bottomMargin","rightMargin","monthWidth","startY","daySpacing","gridGroup","month","secondary","day","formattedDay","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","data","position","_c2","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/FlowerView.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport { Utils } from '../utils/flowerUtils';\nimport Tooltip from './Tooltip';\n\nconst SVGContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FlowerView = ({ \n  flowerData, \n  isRandomView, \n  currentTheme, \n  dimensions,\n  selectedFlower,\n  setSelectedFlower\n}) => {\n  const svgRef = useRef(null);\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n  \n  // 获取颜色比例尺\n  const getColorScale = () => {\n    const theme = colorThemes[currentTheme];\n    return d3.scaleLinear()\n      .domain([-5, -2.5, 0, 2.5, 5])\n      .range([\n        theme.colors.petals.negative[0],\n        theme.colors.petals.negative[2],\n        theme.colors.petals.neutral,\n        theme.colors.petals.positive[2],\n        theme.colors.petals.positive[0]\n      ])\n      .interpolate(d3.interpolateHcl);\n  };\n  \n  // 获取花朵颜色\n  const getColor = (score) => {\n    return getColorScale()(score);\n  };\n  \n  // 获取花芯颜色\n  const getFlowerCenterColor = (score) => {\n    const centers = themeColors.centers;\n    \n    if (score >= 4) return centers.positive;\n    if (score >= 2) return centers.highPositive;\n    if (score > 0) return centers.lowPositive;\n    if (score === 0) return centers.neutral;\n    if (score > -2) return centers.lowNegative;\n    if (score > -4) return centers.highNegative;\n    return centers.negative;\n  };\n\n  // 处理鼠标悬停事件\n  const handleMouseOver = (event, flower) => {\n    setTooltipData(flower);\n    const { clientX, clientY } = event;\n    setTooltipPosition({ x: clientX, y: clientY });\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = (event) => {\n    const { clientX, clientY } = event;\n    setTooltipPosition({ x: clientX, y: clientY });\n  };\n\n  // 处理鼠标离开事件\n  const handleMouseOut = () => {\n    setTooltipData(null);\n  };\n\n  // 绘制花朵\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !flowerData.length) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // 设置视图框\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n\n    // 添加标题\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", SizeConfig.base.titlePadding / 2)\n      .attr(\"class\", \"title-text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"hanging\")\n      .style(\"fill\", themeColors.text.title)\n      .style(\"font-family\", \"'Chelsea Market', cursive\")\n      .style(\"font-size\", \"75px\")\n      .style(\"font-weight\", \"800\")\n      .style(\"letter-spacing\", \"0.02em\")\n      .style(\"opacity\", \"0.8\")\n      .text(\"2025 Mood Garden\");\n\n    // 根据视图模式绘制花朵\n    if (isRandomView) {\n      drawRandomFlowers(svg, flowerData);\n    } else {\n      drawCalendarFlowers(svg, flowerData);\n    }\n\n  }, [flowerData, dimensions, isRandomView, currentTheme]);\n\n  // 绘制随机分布的花朵\n  const drawRandomFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    \n    // 创建花朵和绿叶容器\n    const flowerContainer = svg.append(\"g\")\n      .attr(\"class\", \"flower-container\");\n      \n    // 添加背景绿叶\n    drawBackgroundLeaves(flowerContainer, width / 2, titlePadding + (height - titlePadding) * 0.5);\n    \n    // 设置可用区域\n    const viewWidth = width;\n    const viewHeight = height;\n    const usableWidth = viewWidth * 0.8; \n    const usableHeight = viewHeight - titlePadding * 1.5;\n    const marginX = (viewWidth - usableWidth) / 2;\n    const marginY = titlePadding;\n  \n    // 使用简单的力布局算法确保花朵不会重叠\n    const flowerPositions = [];\n    const minDistance = 50; // 花朵之间的最小距离\n    \n    flowers.forEach((flower, i) => {\n      // 生成随机位置\n      let x, y, attempts = 0;\n      let validPosition = false;\n      \n      // 尝试多次找到不重叠的位置\n      while (!validPosition && attempts < 30) {\n        x = marginX + Math.random() * usableWidth;\n        y = marginY + Math.random() * usableHeight;\n        \n        // 检查与现有花朵的距离\n        validPosition = true;\n        for (const pos of flowerPositions) {\n          const dx = x - pos.x;\n          const dy = y - pos.y;\n          const distance = Math.sqrt(dx*dx + dy*dy);\n          if (distance < minDistance) {\n            validPosition = false;\n            break;\n          }\n        }\n        attempts++;\n      }\n      \n      // 保存位置\n      flower.x = x;\n      flower.y = y;\n      flowerPositions.push({ x, y });\n      \n      // 创建花朵\n      const flowerG = flowerContainer.append(\"g\")\n        .attr(\"class\", \"flower-base\")\n        .attr(\"transform\", `translate(${x}, ${y})`);\n      \n      // 添加动画层\n      const animationLayer = flowerG.append(\"g\")\n        .attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`)\n        .style(\"animation-delay\", `${Math.random() * 2}s`);\n      \n      // 绘制花瓣\n      drawFlowerPetals(animationLayer, flower);\n      \n      // 添加事件处理\n      flowerG\n        .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n        .on(\"mousemove\", handleMouseMove)\n        .on(\"mouseout\", handleMouseOut);\n    });\n  };\n\n  // 绘制背景绿叶\n  const drawBackgroundLeaves = (container, centerX, centerY) => {\n    const leafCount = Math.floor(flowerData.length * 1.8);\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    \n    // 利用整个容器空间\n    const usableWidth = width * 0.9;\n    const usableHeight = height - titlePadding * 1.5;\n    const marginX = (width - usableWidth) / 2;\n    const marginY = titlePadding + 20;\n  \n    const leaves = Array.from({length: leafCount}, (_, i) => {\n      return {\n        x: marginX + Math.random() * usableWidth,\n        y: marginY + Math.random() * usableHeight,\n        size: 12 + Math.random() * 20,\n        angle: Math.random() * 360,\n        id: i\n      };\n    });\n      \n    const leafGroup = container.append(\"g\")\n      .attr(\"class\", \"leaf-group\");\n      \n    leaves.forEach(leaf => {\n      const leafColors = [\n        \"rgba(76, 175, 80, 0.6)\",\n        \"rgba(67, 160, 71, 0.5)\",\n        \"rgba(56, 142, 60, 0.4)\",\n        \"rgba(46, 125, 50, 0.3)\"\n      ];\n      \n      const leafG = leafGroup.append(\"g\")\n        .attr(\"class\", \"leaf-base\")\n        .attr(\"transform\", `translate(${leaf.x}, ${leaf.y})`);\n        \n      const leafAnimLayer = leafG.append(\"g\")\n        .attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`)\n        .style(\"animation-delay\", `${Math.random() * 3}s`)\n        .style(\"animation-duration\", `${7 + Math.random() * 4}s`);\n        \n      leafAnimLayer.append(\"path\")\n        .attr(\"d\", Utils.generateLeaf(leaf.size))\n        .attr(\"fill\", leafColors[Math.floor(Math.random() * leafColors.length)])\n        .attr(\"transform\", `rotate(${leaf.angle})`)\n        .attr(\"opacity\", 0.5 + Math.random() * 0.3);\n    });\n  };\n\n  // 绘制花瓣\n  const drawFlowerPetals = (container, flower) => {\n    const size = SizeConfig.calculateFlowerSize(flower.score, true);\n    const petals = Array.from({length: SizeConfig.flower.petalCount}, (_, j) => {\n      const angle = j * (360 / SizeConfig.flower.petalCount);\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.95' : '1'}\"\n            ${flower.score === 0 ? 'stroke=\"#AAA\" stroke-width=\"0.5\"' : ''}/>\n      `;\n    }).join('');\n    \n    // 添加花瓣到动画层\n    container.html(petals);\n    \n    // 添加花芯\n    container.append(\"circle\")\n      .attr(\"r\", size * SizeConfig.flower.centerRatio)\n      .attr(\"fill\", getFlowerCenterColor(flower.score))\n      .attr(\"stroke\", \"#FFCDB2\")\n      .attr(\"stroke-width\", 1.5);\n  };\n\n  // 绘制日历视图的花朵\n  const drawCalendarFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n    \n    // 增加边距使花朵分布更加均匀\n    const leftMargin = 100;\n    const topMargin = titlePadding * 1.4;\n    const bottomMargin = titlePadding / 5;\n    const rightMargin = 100;\n    \n    // 计算可用宽度和高度\n    const usableWidth = width - leftMargin - rightMargin;\n    const usableHeight = height - topMargin - bottomMargin;\n    \n    // 计算月份和日期的间距\n    const monthWidth = usableWidth / 12;\n    const startY = topMargin;\n    const daySpacing = usableHeight / 31;\n    \n    // 添加背景网格辅助线\n    const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n    \n    // 月份分隔线\n    for (let i = 0; i <= 12; i++) {\n      gridGroup.append(\"line\")\n        .attr(\"class\", \"grid-line\")\n        .attr(\"x1\", leftMargin + i * monthWidth)\n        .attr(\"y1\", topMargin - 20)\n        .attr(\"x2\", leftMargin + i * monthWidth)\n        .attr(\"y2\", topMargin + 31 * daySpacing)\n        .style(\"stroke\", \"rgba(0,0,0,0.05)\")\n        .style(\"stroke-width\", i % 3 === 0 ? 1 : 0.5);\n    }\n    \n    // 每5天的水平分隔线\n    for (let i = 0; i <= 31; i += 5) {\n      gridGroup.append(\"line\")\n        .attr(\"class\", \"grid-line\")\n        .attr(\"x1\", leftMargin - 10)\n        .attr(\"y1\", topMargin + i * daySpacing)\n        .attr(\"x2\", leftMargin + 12 * monthWidth)\n        .attr(\"y2\", topMargin + i * daySpacing)\n        .style(\"stroke\", \"rgba(0,0,0,0.05)\")\n        .style(\"stroke-width\", i % 10 === 0 ? 1 : 0.5);\n    }\n    \n    // 添加月份标签\n    months.forEach((month, i) => {\n      const x = leftMargin + i * monthWidth + (monthWidth / 2);\n      svg.append(\"text\")\n        .attr(\"x\", x)\n        .attr(\"y\", startY - 40)\n        .attr(\"class\", \"month-text\")\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-family\", \"'Montserrat', sans-serif\")\n        .style(\"font-size\", \"20px\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"opacity\", \"0.6\")\n        .style(\"fill\", themeColors.text.secondary)\n        .text(month);\n    });\n    \n    // 添加日期标签\n    for (let day = 1; day <= 31; day++) {\n      const formattedDay = day < 10 ? `0${day}` : `${day}`;\n      svg.append(\"text\")\n        .attr(\"x\", leftMargin - 20)\n        .attr(\"y\", startY + (day - 1) * daySpacing)\n        .attr(\"class\", \"day-text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .style(\"font-family\", \"'Montserrat', sans-serif\")\n        .style(\"font-size\", \"18px\")\n        .style(\"font-weight\", \"500\")\n        .style(\"opacity\", \"0.6\")\n        .style(\"fill\", themeColors.text.secondary)\n        .text(formattedDay);\n    }\n\n    // 创建花朵\n    flowers.forEach(flower => {\n      const x = leftMargin + flower.month * monthWidth + (monthWidth / 2);\n      const y = startY + (flower.day - 1) * daySpacing;\n      \n      const flowerG = svg.append(\"g\")\n        .attr(\"class\", \"flower\")\n        .attr(\"transform\", `translate(${x},${y}) scale(1)`);\n      \n      // 绘制花瓣\n      const size = SizeConfig.calculateFlowerSize(flower.score, false);\n      const petals = Array.from({length: 8}, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"0.9\"/>\n        `;\n      }).join('');\n      \n      flowerG.html(petals);\n      \n      // 添加花芯\n      flowerG.append(\"circle\")\n        .attr(\"r\", size * SizeConfig.flower.centerRatio)\n        .attr(\"fill\", getFlowerCenterColor(flower.score))\n        .attr(\"stroke\", \"#FFCDB2\")\n        .attr(\"stroke-width\", flower.score === 0 ? 2 : 1.8);\n      \n      // 添加事件处理\n      flowerG\n        .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n        .on(\"mousemove\", handleMouseMove)\n        .on(\"mouseout\", handleMouseOut);\n    });\n  };\n\n  return (\n    <SVGContainer>\n      <svg ref={svgRef} width=\"100%\" height=\"100%\" />\n      {tooltipData && (\n        <Tooltip \n          data={tooltipData} \n          position={tooltipPosition}\n          themeColors={themeColors}\n          getColor={getColor}\n        />\n      )}\n    </SVGContainer>\n  );\n};\n\nexport default FlowerView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}