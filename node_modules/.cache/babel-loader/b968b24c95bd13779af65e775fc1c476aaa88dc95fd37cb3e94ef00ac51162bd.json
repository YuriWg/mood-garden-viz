{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/FlowerView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport { Utils } from '../utils/flowerUtils';\nimport Tooltip from './Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SVGContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = SVGContainer;\nconst FlowerView = ({\n  flowerData,\n  isRandomView,\n  currentTheme,\n  dimensions = {\n    width: 0,\n    height: 0\n  },\n  // 添加默认值\n  selectedFlower,\n  setSelectedFlower\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 添加尺寸计算逻辑\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        // 如果尺寸有变化，更新 dimensions\n        if (width !== dimensions.width || height !== dimensions.height) {\n          // 如果父组件提供了 setDimensions 方法，则调用它\n          if (typeof setDimensions === 'function') {\n            setDimensions({\n              width,\n              height\n            });\n          }\n        }\n      }\n    };\n\n    // 初始化时更新一次\n    updateDimensions();\n\n    // 添加 resize 监听器\n    const resizeObserver = new ResizeObserver(updateDimensions);\n    resizeObserver.observe(containerRef.current);\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, []);\n\n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n\n  // 获取颜色比例尺\n  const getColorScale = () => {\n    const theme = colorThemes[currentTheme];\n    return d3.scaleLinear().domain([-5, -2.5, 0, 2.5, 5]).range([theme.colors.petals.negative[0], theme.colors.petals.negative[2], theme.colors.petals.neutral, theme.colors.petals.positive[2], theme.colors.petals.positive[0]]).interpolate(d3.interpolateHcl);\n  };\n\n  // 获取花朵颜色\n  const getColor = score => {\n    return getColorScale()(score);\n  };\n\n  // 获取花芯颜色\n  const getFlowerCenterColor = score => {\n    const centers = themeColors.centers;\n    if (score >= 4) return centers.positive;\n    if (score >= 2) return centers.highPositive;\n    if (score > 0) return centers.lowPositive;\n    if (score === 0) return centers.neutral;\n    if (score > -2) return centers.lowNegative;\n    if (score > -4) return centers.highNegative;\n    return centers.negative;\n  };\n\n  // 处理鼠标悬停事件\n  const handleMouseOver = (event, flower) => {\n    setTooltipData(flower);\n    const {\n      clientX,\n      clientY\n    } = event;\n    setTooltipPosition({\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    setTooltipPosition({\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  // 处理鼠标离开事件\n  const handleMouseOut = () => {\n    setTooltipData(null);\n  };\n\n  // 绘制花朵\n  useEffect(() => {\n    // 确保 dimensions 存在且有效\n    if (!svgRef.current || !dimensions || !dimensions.width || !dimensions.height || !flowerData.length) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // 设置视图框\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n\n    // 移除这段添加标题的代码\n    /* \n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", SizeConfig.base.titlePadding / 2)\n      .attr(\"class\", \"title-text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"hanging\")\n      .style(\"fill\", themeColors.text.title)\n      .style(\"font-family\", \"'Chelsea Market', cursive\")\n      .style(\"font-size\", \"75px\")\n      .style(\"font-weight\", \"800\")\n      .style(\"letter-spacing\", \"0.02em\")\n      .style(\"opacity\", \"0.8\")\n      .text(\"2025 Mood Garden\");\n    */\n\n    // 根据视图模式绘制花朵\n    if (isRandomView) {\n      drawRandomFlowers(svg, flowerData);\n    } else {\n      drawCalendarFlowers(svg, flowerData);\n    }\n  }, [flowerData, dimensions, isRandomView, currentTheme]);\n\n  // 绘制随机分布的花朵\n  // 在 drawRandomFlowers 函数中进行以下修改\n\n  const drawRandomFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding * 0.5; // 减小标题区域\n\n    // 创建花朵和绿叶容器\n    const flowerContainer = svg.append(\"g\").attr(\"class\", \"flower-container\");\n\n    // 添加背景绿叶 - 增加叶子数量\n    const leafCount = Math.min(flowers.length * 0.7, 80); // 叶子数量约为花朵的70%\n    for (let i = 0; i < leafCount; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const size = Math.random() * 10 + 15;\n      const rotation = Math.random() * 360;\n      const opacity = Math.random() * 0.3 + 0.2;\n      const leafG = flowerContainer.append(\"g\").attr(\"transform\", `translate(${x}, ${y})`).attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`);\n      leafG.append(\"path\").attr(\"d\", Utils.generateLeaf(size)).attr(\"fill\", \"#C1D9B3\").attr(\"opacity\", opacity).attr(\"transform\", `rotate(${rotation})`);\n    }\n\n    // 设置可用区域 - 优化边距\n    const viewWidth = width;\n    const viewHeight = height;\n    const usableWidth = viewWidth * 0.9;\n    const usableHeight = viewHeight * 0.9;\n    const marginX = (viewWidth - usableWidth) / 2;\n    const marginY = (viewHeight - usableHeight) / 2;\n\n    // 使用力导向布局算法确保花朵分布更均匀\n    const simulation = d3.forceSimulation(flowers).force(\"charge\", d3.forceManyBody().strength(-150)).force(\"center\", d3.forceCenter(width / 2, height / 2)).force(\"x\", d3.forceX(width / 2).strength(0.07)).force(\"y\", d3.forceY(height / 2).strength(0.07)).force(\"collision\", d3.forceCollide().radius(d => SizeConfig.calculateFlowerSize(d.score, true) * 1.5)).stop();\n\n    // 运行模拟\n    for (let i = 0; i < 300; ++i) simulation.tick();\n\n    // 绘制花朵\n    flowers.forEach((flower, i) => {\n      // 确保花朵在可视区域内\n      flower.x = Math.max(marginX, Math.min(width - marginX, flower.x));\n      flower.y = Math.max(marginY, Math.min(height - marginY, flower.y));\n\n      // 创建花朵\n      const flowerG = flowerContainer.append(\"g\").attr(\"class\", \"flower-base\").attr(\"transform\", `translate(${flower.x}, ${flower.y})`);\n\n      // 添加动画层 - 使用更细微的动画\n      const animationLayer = flowerG.append(\"g\").attr(\"class\", `gentle-float${Math.floor(Math.random() * 4 + 1)}`).style(\"animation-delay\", `${Math.random() * 2}s`);\n\n      // 绘制花瓣 - 调整大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, true) * 0.9; // 稍微缩小花朵\n      const petals = Array.from({\n        length: 8\n      }, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n        `;\n      }).join('');\n      animationLayer.html(petals);\n\n      // 添加花芯\n      animationLayer.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n\n      // 添加事件处理 - 增加悬停效果\n      flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut).style(\"cursor\", \"pointer\").style(\"transition\", \"transform 0.2s ease\").on(\"mouseenter\", function () {\n        d3.select(this).transition().attr(\"transform\", `translate(${flower.x},${flower.y}) scale(1.15)`);\n      }).on(\"mouseleave\", function () {\n        d3.select(this).transition().attr(\"transform\", `translate(${flower.x},${flower.y}) scale(1)`);\n      });\n    });\n  };\n\n  // 绘制背景绿叶\n  const drawBackgroundLeaves = (container, centerX, centerY) => {\n    const leafCount = Math.floor(flowerData.length * 1.8);\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n\n    // 利用整个容器空间\n    const usableWidth = width * 0.9;\n    const usableHeight = height - titlePadding * 1.5;\n    const marginX = (width - usableWidth) / 2;\n    const marginY = titlePadding + 20;\n    const leaves = Array.from({\n      length: leafCount\n    }, (_, i) => {\n      return {\n        x: marginX + Math.random() * usableWidth,\n        y: marginY + Math.random() * usableHeight,\n        size: 12 + Math.random() * 20,\n        angle: Math.random() * 360,\n        id: i\n      };\n    });\n    const leafGroup = container.append(\"g\").attr(\"class\", \"leaf-group\");\n    leaves.forEach(leaf => {\n      const leafColors = [\"rgba(76, 175, 80, 0.6)\", \"rgba(67, 160, 71, 0.5)\", \"rgba(56, 142, 60, 0.4)\", \"rgba(46, 125, 50, 0.3)\"];\n      const leafG = leafGroup.append(\"g\").attr(\"class\", \"leaf-base\").attr(\"transform\", `translate(${leaf.x}, ${leaf.y})`);\n      const leafAnimLayer = leafG.append(\"g\").attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`).style(\"animation-delay\", `${Math.random() * 3}s`).style(\"animation-duration\", `${7 + Math.random() * 4}s`);\n      leafAnimLayer.append(\"path\").attr(\"d\", Utils.generateLeaf(leaf.size)).attr(\"fill\", leafColors[Math.floor(Math.random() * leafColors.length)]).attr(\"transform\", `rotate(${leaf.angle})`).attr(\"opacity\", 0.5 + Math.random() * 0.3);\n    });\n  };\n\n  // 绘制花瓣\n  const drawFlowerPetals = (container, flower) => {\n    const size = SizeConfig.calculateFlowerSize(flower.score, true);\n    const petals = Array.from({\n      length: SizeConfig.flower.petalCount\n    }, (_, j) => {\n      const angle = j * (360 / SizeConfig.flower.petalCount);\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.95' : '1'}\"\n            ${flower.score === 0 ? 'stroke=\"#AAA\" stroke-width=\"0.5\"' : ''}/>\n      `;\n    }).join('');\n\n    // 添加花瓣到动画层\n    container.html(petals);\n\n    // 添加花芯\n    container.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", 1.5);\n  };\n\n  // 绘制日历视图的花朵\n  const drawCalendarFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // 优化边距使花朵分布更加均匀\n    const leftMargin = width * 0.08;\n    const topMargin = titlePadding * 0.8;\n    const bottomMargin = height * 0.05;\n    const rightMargin = width * 0.15; // 增加右侧边距，为图例留出空间\n\n    // 计算可用宽度和高度\n    const usableWidth = width - leftMargin - rightMargin;\n    const usableHeight = height - topMargin - bottomMargin;\n\n    // 计算月份和日期的间距\n    const monthWidth = usableWidth / 12;\n    const startY = topMargin;\n    const daySpacing = Math.min(usableHeight / 31, 22); // 限制最大间距，避免日期过于分散\n\n    // 添加背景网格辅助线\n    const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n\n    // 月份分隔线\n    for (let i = 0; i <= 12; i++) {\n      gridGroup.append(\"line\").attr(\"class\", \"grid-line\").attr(\"x1\", leftMargin + i * monthWidth).attr(\"y1\", topMargin - 20).attr(\"x2\", leftMargin + i * monthWidth).attr(\"y2\", topMargin + 31 * daySpacing).style(\"stroke\", \"rgba(0,0,0,0.05)\").style(\"stroke-width\", i % 3 === 0 ? 1 : 0.5).style(\"stroke-dasharray\", i % 3 === 0 ? \"none\" : \"3,3\");\n    }\n\n    // 每5天的水平分隔线\n    for (let i = 0; i <= 31; i += 5) {\n      gridGroup.append(\"line\").attr(\"class\", \"grid-line\").attr(\"x1\", leftMargin - 10).attr(\"y1\", topMargin + i * daySpacing).attr(\"x2\", leftMargin + 12 * monthWidth).attr(\"y2\", topMargin + i * daySpacing).style(\"stroke\", \"rgba(0,0,0,0.05)\").style(\"stroke-width\", i % 10 === 0 ? 1 : 0.5).style(\"stroke-dasharray\", i % 10 === 0 ? \"none\" : \"3,3\");\n    }\n\n    // 添加月份标签 - 优化字体大小和位置\n    months.forEach((month, i) => {\n      const x = leftMargin + i * monthWidth + monthWidth / 2;\n      svg.append(\"text\").attr(\"x\", x).attr(\"y\", startY - 30).attr(\"class\", \"month-text\").attr(\"text-anchor\", \"middle\").style(\"font-family\", \"'Montserrat', sans-serif\").style(\"font-size\", \"14px\").style(\"font-weight\", \"600\").style(\"opacity\", \"0.7\").style(\"fill\", themeColors.text.secondary).text(month);\n    });\n\n    // 添加日期标签 - 优化字体大小和位置\n    for (let day = 1; day <= 31; day++) {\n      const formattedDay = day < 10 ? `0${day}` : `${day}`;\n      svg.append(\"text\").attr(\"x\", leftMargin - 15).attr(\"y\", startY + (day - 1) * daySpacing).attr(\"class\", \"day-text\").attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"middle\").style(\"font-family\", \"'Montserrat', sans-serif\").style(\"font-size\", \"12px\").style(\"font-weight\", \"500\").style(\"opacity\", day % 5 === 0 ? \"0.7\" : \"0.5\") // 每5天的标签更明显\n      .style(\"fill\", themeColors.text.secondary).text(formattedDay);\n    }\n\n    // 创建花朵 - 优化花朵大小和位置\n    flowers.forEach(flower => {\n      const x = leftMargin + (flower.month - 1) * monthWidth + monthWidth / 2; // 修正月份索引从1开始\n      const y = startY + (flower.day - 1) * daySpacing;\n      const flowerG = svg.append(\"g\").attr(\"class\", \"flower\").attr(\"transform\", `translate(${x},${y})`);\n\n      // 绘制花瓣 - 调整花朵大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, false) * 0.8; // 稍微缩小花朵\n      const petals = Array.from({\n        length: 8\n      }, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n        `;\n      }).join('');\n      flowerG.html(petals);\n\n      // 添加花芯\n      flowerG.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n\n      // 添加事件处理\n      flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut).style(\"cursor\", \"pointer\").style(\"transition\", \"transform 0.2s ease\").on(\"mouseenter\", function () {\n        d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1.15)`);\n      }).on(\"mouseleave\", function () {\n        d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1)`);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SVGContainer, {\n    theme: themeColors,\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"100%\",\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), tooltipData && /*#__PURE__*/_jsxDEV(Tooltip, {\n      data: tooltipData,\n      position: tooltipPosition,\n      themeColors: themeColors,\n      getColor: getColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowerView, \"pWeZdnX9vq0AhJf89hy6R7otN9E=\");\n_c2 = FlowerView;\nexport default FlowerView;\nvar _c, _c2;\n$RefreshReg$(_c, \"SVGContainer\");\n$RefreshReg$(_c2, \"FlowerView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","d3","colorThemes","SizeConfig","Utils","Tooltip","jsxDEV","_jsxDEV","SVGContainer","div","_c","FlowerView","flowerData","isRandomView","currentTheme","dimensions","width","height","selectedFlower","setSelectedFlower","_s","svgRef","containerRef","tooltipData","setTooltipData","tooltipPosition","setTooltipPosition","x","y","current","updateDimensions","getBoundingClientRect","setDimensions","resizeObserver","ResizeObserver","observe","unobserve","themeColors","colors","getColorScale","theme","scaleLinear","domain","range","petals","negative","neutral","positive","interpolate","interpolateHcl","getColor","score","getFlowerCenterColor","centers","highPositive","lowPositive","lowNegative","highNegative","handleMouseOver","event","flower","clientX","clientY","handleMouseMove","handleMouseOut","length","svg","select","selectAll","remove","base","calculateContainerHeight","attr","drawRandomFlowers","drawCalendarFlowers","flowers","titlePadding","flowerContainer","append","leafCount","Math","min","i","random","size","rotation","opacity","leafG","floor","generateLeaf","viewWidth","viewHeight","usableWidth","usableHeight","marginX","marginY","simulation","forceSimulation","force","forceManyBody","strength","forceCenter","forceX","forceY","forceCollide","radius","d","calculateFlowerSize","stop","tick","forEach","max","flowerG","animationLayer","style","Array","from","_","angle","generatePetal","join","html","centerRatio","on","transition","drawBackgroundLeaves","container","centerX","centerY","leaves","id","leafGroup","leaf","leafColors","leafAnimLayer","drawFlowerPetals","petalCount","j","months","leftMargin","topMargin","bottomMargin","rightMargin","monthWidth","startY","daySpacing","gridGroup","month","text","secondary","day","formattedDay","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","data","position","_c2","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/FlowerView.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport { Utils } from '../utils/flowerUtils';\nimport Tooltip from './Tooltip';\n\nconst SVGContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FlowerView = ({ \n  flowerData, \n  isRandomView, \n  currentTheme, \n  dimensions = { width: 0, height: 0 }, // 添加默认值\n  selectedFlower,\n  setSelectedFlower\n}) => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  // 添加尺寸计算逻辑\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        // 如果尺寸有变化，更新 dimensions\n        if (width !== dimensions.width || height !== dimensions.height) {\n          // 如果父组件提供了 setDimensions 方法，则调用它\n          if (typeof setDimensions === 'function') {\n            setDimensions({ width, height });\n          }\n        }\n      }\n    };\n    \n    // 初始化时更新一次\n    updateDimensions();\n    \n    // 添加 resize 监听器\n    const resizeObserver = new ResizeObserver(updateDimensions);\n    resizeObserver.observe(containerRef.current);\n    \n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, []);\n  \n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n  \n  // 获取颜色比例尺\n  const getColorScale = () => {\n    const theme = colorThemes[currentTheme];\n    return d3.scaleLinear()\n      .domain([-5, -2.5, 0, 2.5, 5])\n      .range([\n        theme.colors.petals.negative[0],\n        theme.colors.petals.negative[2],\n        theme.colors.petals.neutral,\n        theme.colors.petals.positive[2],\n        theme.colors.petals.positive[0]\n      ])\n      .interpolate(d3.interpolateHcl);\n  };\n  \n  // 获取花朵颜色\n  const getColor = (score) => {\n    return getColorScale()(score);\n  };\n  \n  // 获取花芯颜色\n  const getFlowerCenterColor = (score) => {\n    const centers = themeColors.centers;\n    \n    if (score >= 4) return centers.positive;\n    if (score >= 2) return centers.highPositive;\n    if (score > 0) return centers.lowPositive;\n    if (score === 0) return centers.neutral;\n    if (score > -2) return centers.lowNegative;\n    if (score > -4) return centers.highNegative;\n    return centers.negative;\n  };\n\n  // 处理鼠标悬停事件\n  const handleMouseOver = (event, flower) => {\n    setTooltipData(flower);\n    const { clientX, clientY } = event;\n    setTooltipPosition({ x: clientX, y: clientY });\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = (event) => {\n    const { clientX, clientY } = event;\n    setTooltipPosition({ x: clientX, y: clientY });\n  };\n\n  // 处理鼠标离开事件\n  const handleMouseOut = () => {\n    setTooltipData(null);\n  };\n\n  // 绘制花朵\n  useEffect(() => {\n    // 确保 dimensions 存在且有效\n    if (!svgRef.current || !dimensions || !dimensions.width || !dimensions.height || !flowerData.length) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // 设置视图框\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n\n    // 移除这段添加标题的代码\n    /* \n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", SizeConfig.base.titlePadding / 2)\n      .attr(\"class\", \"title-text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"hanging\")\n      .style(\"fill\", themeColors.text.title)\n      .style(\"font-family\", \"'Chelsea Market', cursive\")\n      .style(\"font-size\", \"75px\")\n      .style(\"font-weight\", \"800\")\n      .style(\"letter-spacing\", \"0.02em\")\n      .style(\"opacity\", \"0.8\")\n      .text(\"2025 Mood Garden\");\n    */\n\n    // 根据视图模式绘制花朵\n    if (isRandomView) {\n      drawRandomFlowers(svg, flowerData);\n    } else {\n      drawCalendarFlowers(svg, flowerData);\n    }\n\n  }, [flowerData, dimensions, isRandomView, currentTheme]);\n\n  // 绘制随机分布的花朵\n  // 在 drawRandomFlowers 函数中进行以下修改\n  \n  const drawRandomFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding * 0.5; // 减小标题区域\n    \n    // 创建花朵和绿叶容器\n    const flowerContainer = svg.append(\"g\")\n      .attr(\"class\", \"flower-container\");\n      \n    // 添加背景绿叶 - 增加叶子数量\n    const leafCount = Math.min(flowers.length * 0.7, 80); // 叶子数量约为花朵的70%\n    for (let i = 0; i < leafCount; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const size = Math.random() * 10 + 15;\n      const rotation = Math.random() * 360;\n      const opacity = Math.random() * 0.3 + 0.2;\n      \n      const leafG = flowerContainer.append(\"g\")\n        .attr(\"transform\", `translate(${x}, ${y})`)\n        .attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`);\n        \n      leafG.append(\"path\")\n        .attr(\"d\", Utils.generateLeaf(size))\n        .attr(\"fill\", \"#C1D9B3\")\n        .attr(\"opacity\", opacity)\n        .attr(\"transform\", `rotate(${rotation})`);\n    }\n    \n    // 设置可用区域 - 优化边距\n    const viewWidth = width;\n    const viewHeight = height;\n    const usableWidth = viewWidth * 0.9; \n    const usableHeight = viewHeight * 0.9;\n    const marginX = (viewWidth - usableWidth) / 2;\n    const marginY = (viewHeight - usableHeight) / 2;\n  \n    // 使用力导向布局算法确保花朵分布更均匀\n    const simulation = d3.forceSimulation(flowers)\n      .force(\"charge\", d3.forceManyBody().strength(-150))\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .force(\"x\", d3.forceX(width / 2).strength(0.07))\n      .force(\"y\", d3.forceY(height / 2).strength(0.07))\n      .force(\"collision\", d3.forceCollide().radius(d => SizeConfig.calculateFlowerSize(d.score, true) * 1.5))\n      .stop();\n    \n    // 运行模拟\n    for (let i = 0; i < 300; ++i) simulation.tick();\n    \n    // 绘制花朵\n    flowers.forEach((flower, i) => {\n      // 确保花朵在可视区域内\n      flower.x = Math.max(marginX, Math.min(width - marginX, flower.x));\n      flower.y = Math.max(marginY, Math.min(height - marginY, flower.y));\n      \n      // 创建花朵\n      const flowerG = flowerContainer.append(\"g\")\n        .attr(\"class\", \"flower-base\")\n        .attr(\"transform\", `translate(${flower.x}, ${flower.y})`);\n      \n      // 添加动画层 - 使用更细微的动画\n      const animationLayer = flowerG.append(\"g\")\n        .attr(\"class\", `gentle-float${Math.floor(Math.random() * 4 + 1)}`)\n        .style(\"animation-delay\", `${Math.random() * 2}s`);\n      \n      // 绘制花瓣 - 调整大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, true) * 0.9; // 稍微缩小花朵\n      const petals = Array.from({length: 8}, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n        `;\n      }).join('');\n      \n      animationLayer.html(petals);\n      \n      // 添加花芯\n      animationLayer.append(\"circle\")\n        .attr(\"r\", size * SizeConfig.flower.centerRatio)\n        .attr(\"fill\", getFlowerCenterColor(flower.score))\n        .attr(\"stroke\", \"#FFCDB2\")\n        .attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n      \n      // 添加事件处理 - 增加悬停效果\n      flowerG\n        .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n        .on(\"mousemove\", handleMouseMove)\n        .on(\"mouseout\", handleMouseOut)\n        .style(\"cursor\", \"pointer\")\n        .style(\"transition\", \"transform 0.2s ease\")\n        .on(\"mouseenter\", function() {\n          d3.select(this).transition().attr(\"transform\", `translate(${flower.x},${flower.y}) scale(1.15)`);\n        })\n        .on(\"mouseleave\", function() {\n          d3.select(this).transition().attr(\"transform\", `translate(${flower.x},${flower.y}) scale(1)`);\n        });\n    });\n  };\n\n  // 绘制背景绿叶\n  const drawBackgroundLeaves = (container, centerX, centerY) => {\n    const leafCount = Math.floor(flowerData.length * 1.8);\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    \n    // 利用整个容器空间\n    const usableWidth = width * 0.9;\n    const usableHeight = height - titlePadding * 1.5;\n    const marginX = (width - usableWidth) / 2;\n    const marginY = titlePadding + 20;\n  \n    const leaves = Array.from({length: leafCount}, (_, i) => {\n      return {\n        x: marginX + Math.random() * usableWidth,\n        y: marginY + Math.random() * usableHeight,\n        size: 12 + Math.random() * 20,\n        angle: Math.random() * 360,\n        id: i\n      };\n    });\n      \n    const leafGroup = container.append(\"g\")\n      .attr(\"class\", \"leaf-group\");\n      \n    leaves.forEach(leaf => {\n      const leafColors = [\n        \"rgba(76, 175, 80, 0.6)\",\n        \"rgba(67, 160, 71, 0.5)\",\n        \"rgba(56, 142, 60, 0.4)\",\n        \"rgba(46, 125, 50, 0.3)\"\n      ];\n      \n      const leafG = leafGroup.append(\"g\")\n        .attr(\"class\", \"leaf-base\")\n        .attr(\"transform\", `translate(${leaf.x}, ${leaf.y})`);\n        \n      const leafAnimLayer = leafG.append(\"g\")\n        .attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`)\n        .style(\"animation-delay\", `${Math.random() * 3}s`)\n        .style(\"animation-duration\", `${7 + Math.random() * 4}s`);\n        \n      leafAnimLayer.append(\"path\")\n        .attr(\"d\", Utils.generateLeaf(leaf.size))\n        .attr(\"fill\", leafColors[Math.floor(Math.random() * leafColors.length)])\n        .attr(\"transform\", `rotate(${leaf.angle})`)\n        .attr(\"opacity\", 0.5 + Math.random() * 0.3);\n    });\n  };\n\n  // 绘制花瓣\n  const drawFlowerPetals = (container, flower) => {\n    const size = SizeConfig.calculateFlowerSize(flower.score, true);\n    const petals = Array.from({length: SizeConfig.flower.petalCount}, (_, j) => {\n      const angle = j * (360 / SizeConfig.flower.petalCount);\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.95' : '1'}\"\n            ${flower.score === 0 ? 'stroke=\"#AAA\" stroke-width=\"0.5\"' : ''}/>\n      `;\n    }).join('');\n    \n    // 添加花瓣到动画层\n    container.html(petals);\n    \n    // 添加花芯\n    container.append(\"circle\")\n      .attr(\"r\", size * SizeConfig.flower.centerRatio)\n      .attr(\"fill\", getFlowerCenterColor(flower.score))\n      .attr(\"stroke\", \"#FFCDB2\")\n      .attr(\"stroke-width\", 1.5);\n  };\n\n  // 绘制日历视图的花朵\n  const drawCalendarFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n    \n    // 优化边距使花朵分布更加均匀\n    const leftMargin = width * 0.08;\n    const topMargin = titlePadding * 0.8;\n    const bottomMargin = height * 0.05;\n    const rightMargin = width * 0.15; // 增加右侧边距，为图例留出空间\n    \n    // 计算可用宽度和高度\n    const usableWidth = width - leftMargin - rightMargin;\n    const usableHeight = height - topMargin - bottomMargin;\n    \n    // 计算月份和日期的间距\n    const monthWidth = usableWidth / 12;\n    const startY = topMargin;\n    const daySpacing = Math.min(usableHeight / 31, 22); // 限制最大间距，避免日期过于分散\n    \n    // 添加背景网格辅助线\n    const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n    \n    // 月份分隔线\n    for (let i = 0; i <= 12; i++) {\n      gridGroup.append(\"line\")\n        .attr(\"class\", \"grid-line\")\n        .attr(\"x1\", leftMargin + i * monthWidth)\n        .attr(\"y1\", topMargin - 20)\n        .attr(\"x2\", leftMargin + i * monthWidth)\n        .attr(\"y2\", topMargin + 31 * daySpacing)\n        .style(\"stroke\", \"rgba(0,0,0,0.05)\")\n        .style(\"stroke-width\", i % 3 === 0 ? 1 : 0.5)\n        .style(\"stroke-dasharray\", i % 3 === 0 ? \"none\" : \"3,3\");\n    }\n    \n    // 每5天的水平分隔线\n    for (let i = 0; i <= 31; i += 5) {\n      gridGroup.append(\"line\")\n        .attr(\"class\", \"grid-line\")\n        .attr(\"x1\", leftMargin - 10)\n        .attr(\"y1\", topMargin + i * daySpacing)\n        .attr(\"x2\", leftMargin + 12 * monthWidth)\n        .attr(\"y2\", topMargin + i * daySpacing)\n        .style(\"stroke\", \"rgba(0,0,0,0.05)\")\n        .style(\"stroke-width\", i % 10 === 0 ? 1 : 0.5)\n        .style(\"stroke-dasharray\", i % 10 === 0 ? \"none\" : \"3,3\");\n    }\n    \n    // 添加月份标签 - 优化字体大小和位置\n    months.forEach((month, i) => {\n      const x = leftMargin + i * monthWidth + (monthWidth / 2);\n      svg.append(\"text\")\n        .attr(\"x\", x)\n        .attr(\"y\", startY - 30)\n        .attr(\"class\", \"month-text\")\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-family\", \"'Montserrat', sans-serif\")\n        .style(\"font-size\", \"14px\")\n        .style(\"font-weight\", \"600\")\n        .style(\"opacity\", \"0.7\")\n        .style(\"fill\", themeColors.text.secondary)\n        .text(month);\n    });\n    \n    // 添加日期标签 - 优化字体大小和位置\n    for (let day = 1; day <= 31; day++) {\n      const formattedDay = day < 10 ? `0${day}` : `${day}`;\n      svg.append(\"text\")\n        .attr(\"x\", leftMargin - 15)\n        .attr(\"y\", startY + (day - 1) * daySpacing)\n        .attr(\"class\", \"day-text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .style(\"font-family\", \"'Montserrat', sans-serif\")\n        .style(\"font-size\", \"12px\")\n        .style(\"font-weight\", \"500\")\n        .style(\"opacity\", day % 5 === 0 ? \"0.7\" : \"0.5\") // 每5天的标签更明显\n        .style(\"fill\", themeColors.text.secondary)\n        .text(formattedDay);\n    }\n\n    // 创建花朵 - 优化花朵大小和位置\n    flowers.forEach(flower => {\n      const x = leftMargin + (flower.month - 1) * monthWidth + (monthWidth / 2); // 修正月份索引从1开始\n      const y = startY + (flower.day - 1) * daySpacing;\n      \n      const flowerG = svg.append(\"g\")\n        .attr(\"class\", \"flower\")\n        .attr(\"transform\", `translate(${x},${y})`);\n      \n      // 绘制花瓣 - 调整花朵大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, false) * 0.8; // 稍微缩小花朵\n      const petals = Array.from({length: 8}, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n        `;\n      }).join('');\n      \n      flowerG.html(petals);\n      \n      // 添加花芯\n      flowerG.append(\"circle\")\n        .attr(\"r\", size * SizeConfig.flower.centerRatio)\n        .attr(\"fill\", getFlowerCenterColor(flower.score))\n        .attr(\"stroke\", \"#FFCDB2\")\n        .attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n      \n      // 添加事件处理\n      flowerG\n        .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n        .on(\"mousemove\", handleMouseMove)\n        .on(\"mouseout\", handleMouseOut)\n        .style(\"cursor\", \"pointer\")\n        .style(\"transition\", \"transform 0.2s ease\")\n        .on(\"mouseenter\", function() {\n          d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1.15)`);\n        })\n        .on(\"mouseleave\", function() {\n          d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1)`);\n        });\n    });\n  };\n\n  return (\n    <SVGContainer theme={themeColors} ref={containerRef}>\n      <svg ref={svgRef} width=\"100%\" height=\"100%\" />\n      {tooltipData && (\n        <Tooltip \n          data={tooltipData} \n          position={tooltipPosition}\n          themeColors={themeColors}\n          getColor={getColor}\n        />\n      )}\n    </SVGContainer>\n  );\n};\n\nexport default FlowerView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGR,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,YAAY;AAUlB,MAAMG,UAAU,GAAGA,CAAC;EAClBC,UAAU;EACVC,YAAY;EACZC,YAAY;EACZC,UAAU,GAAG;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC;EAAE;EACtCC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,MAAM,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMyB,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC;IAAE4B,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;;EAEtE;EACA9B,SAAS,CAAC,MAAM;IACd,IAAI,CAACwB,YAAY,CAACO,OAAO,EAAE;IAE3B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,IAAIR,YAAY,CAACO,OAAO,EAAE;QACxB,MAAM;UAAEb,KAAK;UAAEC;QAAO,CAAC,GAAGK,YAAY,CAACO,OAAO,CAACE,qBAAqB,CAAC,CAAC;QACtE;QACA,IAAIf,KAAK,KAAKD,UAAU,CAACC,KAAK,IAAIC,MAAM,KAAKF,UAAU,CAACE,MAAM,EAAE;UAC9D;UACA,IAAI,OAAOe,aAAa,KAAK,UAAU,EAAE;YACvCA,aAAa,CAAC;cAAEhB,KAAK;cAAEC;YAAO,CAAC,CAAC;UAClC;QACF;MACF;IACF,CAAC;;IAED;IACAa,gBAAgB,CAAC,CAAC;;IAElB;IACA,MAAMG,cAAc,GAAG,IAAIC,cAAc,CAACJ,gBAAgB,CAAC;IAC3DG,cAAc,CAACE,OAAO,CAACb,YAAY,CAACO,OAAO,CAAC;IAE5C,OAAO,MAAM;MACX,IAAIP,YAAY,CAACO,OAAO,EAAE;QACxBI,cAAc,CAACG,SAAS,CAACd,YAAY,CAACO,OAAO,CAAC;MAChD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,WAAW,GAAGnC,WAAW,CAACY,YAAY,CAAC,CAACwB,MAAM;;EAEpD;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGtC,WAAW,CAACY,YAAY,CAAC;IACvC,OAAOb,EAAE,CAACwC,WAAW,CAAC,CAAC,CACpBC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAC7BC,KAAK,CAAC,CACLH,KAAK,CAACF,MAAM,CAACM,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,EAC/BL,KAAK,CAACF,MAAM,CAACM,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,EAC/BL,KAAK,CAACF,MAAM,CAACM,MAAM,CAACE,OAAO,EAC3BN,KAAK,CAACF,MAAM,CAACM,MAAM,CAACG,QAAQ,CAAC,CAAC,CAAC,EAC/BP,KAAK,CAACF,MAAM,CAACM,MAAM,CAACG,QAAQ,CAAC,CAAC,CAAC,CAChC,CAAC,CACDC,WAAW,CAAC/C,EAAE,CAACgD,cAAc,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1B,OAAOZ,aAAa,CAAC,CAAC,CAACY,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAID,KAAK,IAAK;IACtC,MAAME,OAAO,GAAGhB,WAAW,CAACgB,OAAO;IAEnC,IAAIF,KAAK,IAAI,CAAC,EAAE,OAAOE,OAAO,CAACN,QAAQ;IACvC,IAAII,KAAK,IAAI,CAAC,EAAE,OAAOE,OAAO,CAACC,YAAY;IAC3C,IAAIH,KAAK,GAAG,CAAC,EAAE,OAAOE,OAAO,CAACE,WAAW;IACzC,IAAIJ,KAAK,KAAK,CAAC,EAAE,OAAOE,OAAO,CAACP,OAAO;IACvC,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE,OAAOE,OAAO,CAACG,WAAW;IAC1C,IAAIL,KAAK,GAAG,CAAC,CAAC,EAAE,OAAOE,OAAO,CAACI,YAAY;IAC3C,OAAOJ,OAAO,CAACR,QAAQ;EACzB,CAAC;;EAED;EACA,MAAMa,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACzCpC,cAAc,CAACoC,MAAM,CAAC;IACtB,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGH,KAAK;IAClCjC,kBAAkB,CAAC;MAAEC,CAAC,EAAEkC,OAAO;MAAEjC,CAAC,EAAEkC;IAAQ,CAAC,CAAC;EAChD,CAAC;;EAED;EACA,MAAMC,eAAe,GAAIJ,KAAK,IAAK;IACjC,MAAM;MAAEE,OAAO;MAAEC;IAAQ,CAAC,GAAGH,KAAK;IAClCjC,kBAAkB,CAAC;MAAEC,CAAC,EAAEkC,OAAO;MAAEjC,CAAC,EAAEkC;IAAQ,CAAC,CAAC;EAChD,CAAC;;EAED;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BxC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACuB,MAAM,CAACQ,OAAO,IAAI,CAACd,UAAU,IAAI,CAACA,UAAU,CAACC,KAAK,IAAI,CAACD,UAAU,CAACE,MAAM,IAAI,CAACL,UAAU,CAACqD,MAAM,EAAE;IAErG,MAAMC,GAAG,GAAGjE,EAAE,CAACkE,MAAM,CAAC9C,MAAM,CAACQ,OAAO,CAAC;IACrCqC,GAAG,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAE3B;IACA,MAAMrD,KAAK,GAAGb,UAAU,CAACmE,IAAI,CAACtD,KAAK;IACnC,MAAMC,MAAM,GAAGd,UAAU,CAACoE,wBAAwB,CAAC,CAAC;IACpDL,GAAG,CAACM,IAAI,CAAC,SAAS,EAAE,OAAOxD,KAAK,IAAIC,MAAM,EAAE,CAAC;;IAE7C;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;IACA,IAAIJ,YAAY,EAAE;MAChB4D,iBAAiB,CAACP,GAAG,EAAEtD,UAAU,CAAC;IACpC,CAAC,MAAM;MACL8D,mBAAmB,CAACR,GAAG,EAAEtD,UAAU,CAAC;IACtC;EAEF,CAAC,EAAE,CAACA,UAAU,EAAEG,UAAU,EAAEF,YAAY,EAAEC,YAAY,CAAC,CAAC;;EAExD;EACA;;EAEA,MAAM2D,iBAAiB,GAAGA,CAACP,GAAG,EAAES,OAAO,KAAK;IAC1C,MAAM3D,KAAK,GAAGb,UAAU,CAACmE,IAAI,CAACtD,KAAK;IACnC,MAAMC,MAAM,GAAGd,UAAU,CAACoE,wBAAwB,CAAC,CAAC;IACpD,MAAMK,YAAY,GAAGzE,UAAU,CAACmE,IAAI,CAACM,YAAY,GAAG,GAAG,CAAC,CAAC;;IAEzD;IACA,MAAMC,eAAe,GAAGX,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CACpCN,IAAI,CAAC,OAAO,EAAE,kBAAkB,CAAC;;IAEpC;IACA,MAAMO,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACN,OAAO,CAACV,MAAM,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACtD,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,EAAEG,CAAC,EAAE,EAAE;MAClC,MAAMvD,CAAC,GAAGqD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGnE,KAAK;MAC/B,MAAMY,CAAC,GAAGoD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGlE,MAAM;MAChC,MAAMmE,IAAI,GAAGJ,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;MACpC,MAAME,QAAQ,GAAGL,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG;MACpC,MAAMG,OAAO,GAAGN,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MAEzC,MAAMI,KAAK,GAAGV,eAAe,CAACC,MAAM,CAAC,GAAG,CAAC,CACtCN,IAAI,CAAC,WAAW,EAAE,aAAa7C,CAAC,KAAKC,CAAC,GAAG,CAAC,CAC1C4C,IAAI,CAAC,OAAO,EAAE,oBAAoBQ,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;MAEzEI,KAAK,CAACT,MAAM,CAAC,MAAM,CAAC,CACjBN,IAAI,CAAC,GAAG,EAAEpE,KAAK,CAACqF,YAAY,CAACL,IAAI,CAAC,CAAC,CACnCZ,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBA,IAAI,CAAC,SAAS,EAAEc,OAAO,CAAC,CACxBd,IAAI,CAAC,WAAW,EAAE,UAAUa,QAAQ,GAAG,CAAC;IAC7C;;IAEA;IACA,MAAMK,SAAS,GAAG1E,KAAK;IACvB,MAAM2E,UAAU,GAAG1E,MAAM;IACzB,MAAM2E,WAAW,GAAGF,SAAS,GAAG,GAAG;IACnC,MAAMG,YAAY,GAAGF,UAAU,GAAG,GAAG;IACrC,MAAMG,OAAO,GAAG,CAACJ,SAAS,GAAGE,WAAW,IAAI,CAAC;IAC7C,MAAMG,OAAO,GAAG,CAACJ,UAAU,GAAGE,YAAY,IAAI,CAAC;;IAE/C;IACA,MAAMG,UAAU,GAAG/F,EAAE,CAACgG,eAAe,CAACtB,OAAO,CAAC,CAC3CuB,KAAK,CAAC,QAAQ,EAAEjG,EAAE,CAACkG,aAAa,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAClDF,KAAK,CAAC,QAAQ,EAAEjG,EAAE,CAACoG,WAAW,CAACrF,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC,CAAC,CACtDiF,KAAK,CAAC,GAAG,EAAEjG,EAAE,CAACqG,MAAM,CAACtF,KAAK,GAAG,CAAC,CAAC,CAACoF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC/CF,KAAK,CAAC,GAAG,EAAEjG,EAAE,CAACsG,MAAM,CAACtF,MAAM,GAAG,CAAC,CAAC,CAACmF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAChDF,KAAK,CAAC,WAAW,EAAEjG,EAAE,CAACuG,YAAY,CAAC,CAAC,CAACC,MAAM,CAACC,CAAC,IAAIvG,UAAU,CAACwG,mBAAmB,CAACD,CAAC,CAACvD,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CACtGyD,IAAI,CAAC,CAAC;;IAET;IACA,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAAEc,UAAU,CAACa,IAAI,CAAC,CAAC;;IAE/C;IACAlC,OAAO,CAACmC,OAAO,CAAC,CAAClD,MAAM,EAAEsB,CAAC,KAAK;MAC7B;MACAtB,MAAM,CAACjC,CAAC,GAAGqD,IAAI,CAAC+B,GAAG,CAACjB,OAAO,EAAEd,IAAI,CAACC,GAAG,CAACjE,KAAK,GAAG8E,OAAO,EAAElC,MAAM,CAACjC,CAAC,CAAC,CAAC;MACjEiC,MAAM,CAAChC,CAAC,GAAGoD,IAAI,CAAC+B,GAAG,CAAChB,OAAO,EAAEf,IAAI,CAACC,GAAG,CAAChE,MAAM,GAAG8E,OAAO,EAAEnC,MAAM,CAAChC,CAAC,CAAC,CAAC;;MAElE;MACA,MAAMoF,OAAO,GAAGnC,eAAe,CAACC,MAAM,CAAC,GAAG,CAAC,CACxCN,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAC5BA,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACjC,CAAC,KAAKiC,MAAM,CAAChC,CAAC,GAAG,CAAC;;MAE3D;MACA,MAAMqF,cAAc,GAAGD,OAAO,CAAClC,MAAM,CAAC,GAAG,CAAC,CACvCN,IAAI,CAAC,OAAO,EAAE,eAAeQ,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACjE+B,KAAK,CAAC,iBAAiB,EAAE,GAAGlC,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;;MAEpD;MACA,MAAMC,IAAI,GAAGjF,UAAU,CAACwG,mBAAmB,CAAC/C,MAAM,CAACT,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;MACvE,MAAMP,MAAM,GAAGuE,KAAK,CAACC,IAAI,CAAC;QAACnD,MAAM,EAAE;MAAC,CAAC,EAAE,CAACoD,CAAC,EAAEnC,CAAC,KAAK;QAC/C,MAAMoC,KAAK,GAAGpC,CAAC,GAAG,EAAE;QACpB,OAAO;AACf,qBAAqB9E,KAAK,CAACmH,aAAa,CAACnC,IAAI,CAAC;AAC9C,wBAAwBlC,QAAQ,CAACU,MAAM,CAACT,KAAK,CAAC;AAC9C,oCAAoCmE,KAAK;AACzC,2BAA2B1D,MAAM,CAACT,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM;AAC/D,SAAS;MACH,CAAC,CAAC,CAACqE,IAAI,CAAC,EAAE,CAAC;MAEXP,cAAc,CAACQ,IAAI,CAAC7E,MAAM,CAAC;;MAE3B;MACAqE,cAAc,CAACnC,MAAM,CAAC,QAAQ,CAAC,CAC5BN,IAAI,CAAC,GAAG,EAAEY,IAAI,GAAGjF,UAAU,CAACyD,MAAM,CAAC8D,WAAW,CAAC,CAC/ClD,IAAI,CAAC,MAAM,EAAEpB,oBAAoB,CAACQ,MAAM,CAACT,KAAK,CAAC,CAAC,CAChDqB,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAEZ,MAAM,CAACT,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;;MAEvD;MACA6D,OAAO,CACJW,EAAE,CAAC,WAAW,EAAGhE,KAAK,IAAKD,eAAe,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAC,CAC1D+D,EAAE,CAAC,WAAW,EAAE5D,eAAe,CAAC,CAChC4D,EAAE,CAAC,UAAU,EAAE3D,cAAc,CAAC,CAC9BkD,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BA,KAAK,CAAC,YAAY,EAAE,qBAAqB,CAAC,CAC1CS,EAAE,CAAC,YAAY,EAAE,YAAW;QAC3B1H,EAAE,CAACkE,MAAM,CAAC,IAAI,CAAC,CAACyD,UAAU,CAAC,CAAC,CAACpD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACjC,CAAC,IAAIiC,MAAM,CAAChC,CAAC,eAAe,CAAC;MAClG,CAAC,CAAC,CACD+F,EAAE,CAAC,YAAY,EAAE,YAAW;QAC3B1H,EAAE,CAACkE,MAAM,CAAC,IAAI,CAAC,CAACyD,UAAU,CAAC,CAAC,CAACpD,IAAI,CAAC,WAAW,EAAE,aAAaZ,MAAM,CAACjC,CAAC,IAAIiC,MAAM,CAAChC,CAAC,YAAY,CAAC;MAC/F,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMiG,oBAAoB,GAAGA,CAACC,SAAS,EAAEC,OAAO,EAAEC,OAAO,KAAK;IAC5D,MAAMjD,SAAS,GAAGC,IAAI,CAACQ,KAAK,CAAC5E,UAAU,CAACqD,MAAM,GAAG,GAAG,CAAC;IACrD,MAAMjD,KAAK,GAAGb,UAAU,CAACmE,IAAI,CAACtD,KAAK;IACnC,MAAMC,MAAM,GAAGd,UAAU,CAACoE,wBAAwB,CAAC,CAAC;IACpD,MAAMK,YAAY,GAAGzE,UAAU,CAACmE,IAAI,CAACM,YAAY;;IAEjD;IACA,MAAMgB,WAAW,GAAG5E,KAAK,GAAG,GAAG;IAC/B,MAAM6E,YAAY,GAAG5E,MAAM,GAAG2D,YAAY,GAAG,GAAG;IAChD,MAAMkB,OAAO,GAAG,CAAC9E,KAAK,GAAG4E,WAAW,IAAI,CAAC;IACzC,MAAMG,OAAO,GAAGnB,YAAY,GAAG,EAAE;IAEjC,MAAMqD,MAAM,GAAGd,KAAK,CAACC,IAAI,CAAC;MAACnD,MAAM,EAAEc;IAAS,CAAC,EAAE,CAACsC,CAAC,EAAEnC,CAAC,KAAK;MACvD,OAAO;QACLvD,CAAC,EAAEmE,OAAO,GAAGd,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGS,WAAW;QACxChE,CAAC,EAAEmE,OAAO,GAAGf,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGU,YAAY;QACzCT,IAAI,EAAE,EAAE,GAAGJ,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,EAAE;QAC7BmC,KAAK,EAAEtC,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG;QAC1B+C,EAAE,EAAEhD;MACN,CAAC;IACH,CAAC,CAAC;IAEF,MAAMiD,SAAS,GAAGL,SAAS,CAAChD,MAAM,CAAC,GAAG,CAAC,CACpCN,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;IAE9ByD,MAAM,CAACnB,OAAO,CAACsB,IAAI,IAAI;MACrB,MAAMC,UAAU,GAAG,CACjB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,CACzB;MAED,MAAM9C,KAAK,GAAG4C,SAAS,CAACrD,MAAM,CAAC,GAAG,CAAC,CAChCN,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAC1BA,IAAI,CAAC,WAAW,EAAE,aAAa4D,IAAI,CAACzG,CAAC,KAAKyG,IAAI,CAACxG,CAAC,GAAG,CAAC;MAEvD,MAAM0G,aAAa,GAAG/C,KAAK,CAACT,MAAM,CAAC,GAAG,CAAC,CACpCN,IAAI,CAAC,OAAO,EAAE,oBAAoBQ,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACtE+B,KAAK,CAAC,iBAAiB,EAAE,GAAGlC,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CACjD+B,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,GAAGlC,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MAE3DmD,aAAa,CAACxD,MAAM,CAAC,MAAM,CAAC,CACzBN,IAAI,CAAC,GAAG,EAAEpE,KAAK,CAACqF,YAAY,CAAC2C,IAAI,CAAChD,IAAI,CAAC,CAAC,CACxCZ,IAAI,CAAC,MAAM,EAAE6D,UAAU,CAACrD,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGkD,UAAU,CAACpE,MAAM,CAAC,CAAC,CAAC,CACvEO,IAAI,CAAC,WAAW,EAAE,UAAU4D,IAAI,CAACd,KAAK,GAAG,CAAC,CAC1C9C,IAAI,CAAC,SAAS,EAAE,GAAG,GAAGQ,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMoD,gBAAgB,GAAGA,CAACT,SAAS,EAAElE,MAAM,KAAK;IAC9C,MAAMwB,IAAI,GAAGjF,UAAU,CAACwG,mBAAmB,CAAC/C,MAAM,CAACT,KAAK,EAAE,IAAI,CAAC;IAC/D,MAAMP,MAAM,GAAGuE,KAAK,CAACC,IAAI,CAAC;MAACnD,MAAM,EAAE9D,UAAU,CAACyD,MAAM,CAAC4E;IAAU,CAAC,EAAE,CAACnB,CAAC,EAAEoB,CAAC,KAAK;MAC1E,MAAMnB,KAAK,GAAGmB,CAAC,IAAI,GAAG,GAAGtI,UAAU,CAACyD,MAAM,CAAC4E,UAAU,CAAC;MACtD,OAAO;AACb,mBAAmBpI,KAAK,CAACmH,aAAa,CAACnC,IAAI,CAAC;AAC5C,sBAAsBlC,QAAQ,CAACU,MAAM,CAACT,KAAK,CAAC;AAC5C,kCAAkCmE,KAAK;AACvC,yBAAyB1D,MAAM,CAACT,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,GAAG;AAC1D,cAAcS,MAAM,CAACT,KAAK,KAAK,CAAC,GAAG,kCAAkC,GAAG,EAAE;AAC1E,OAAO;IACH,CAAC,CAAC,CAACqE,IAAI,CAAC,EAAE,CAAC;;IAEX;IACAM,SAAS,CAACL,IAAI,CAAC7E,MAAM,CAAC;;IAEtB;IACAkF,SAAS,CAAChD,MAAM,CAAC,QAAQ,CAAC,CACvBN,IAAI,CAAC,GAAG,EAAEY,IAAI,GAAGjF,UAAU,CAACyD,MAAM,CAAC8D,WAAW,CAAC,CAC/ClD,IAAI,CAAC,MAAM,EAAEpB,oBAAoB,CAACQ,MAAM,CAACT,KAAK,CAAC,CAAC,CAChDqB,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;EAC9B,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAGA,CAACR,GAAG,EAAES,OAAO,KAAK;IAC5C,MAAM3D,KAAK,GAAGb,UAAU,CAACmE,IAAI,CAACtD,KAAK;IACnC,MAAMC,MAAM,GAAGd,UAAU,CAACoE,wBAAwB,CAAC,CAAC;IACpD,MAAMK,YAAY,GAAGzE,UAAU,CAACmE,IAAI,CAACM,YAAY;IACjD,MAAM8D,MAAM,GAAG,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC;;IAExF;IACA,MAAMC,UAAU,GAAG3H,KAAK,GAAG,IAAI;IAC/B,MAAM4H,SAAS,GAAGhE,YAAY,GAAG,GAAG;IACpC,MAAMiE,YAAY,GAAG5H,MAAM,GAAG,IAAI;IAClC,MAAM6H,WAAW,GAAG9H,KAAK,GAAG,IAAI,CAAC,CAAC;;IAElC;IACA,MAAM4E,WAAW,GAAG5E,KAAK,GAAG2H,UAAU,GAAGG,WAAW;IACpD,MAAMjD,YAAY,GAAG5E,MAAM,GAAG2H,SAAS,GAAGC,YAAY;;IAEtD;IACA,MAAME,UAAU,GAAGnD,WAAW,GAAG,EAAE;IACnC,MAAMoD,MAAM,GAAGJ,SAAS;IACxB,MAAMK,UAAU,GAAGjE,IAAI,CAACC,GAAG,CAACY,YAAY,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEpD;IACA,MAAMqD,SAAS,GAAGhF,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACN,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;;IAE7D;IACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5BgE,SAAS,CAACpE,MAAM,CAAC,MAAM,CAAC,CACrBN,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAC1BA,IAAI,CAAC,IAAI,EAAEmE,UAAU,GAAGzD,CAAC,GAAG6D,UAAU,CAAC,CACvCvE,IAAI,CAAC,IAAI,EAAEoE,SAAS,GAAG,EAAE,CAAC,CAC1BpE,IAAI,CAAC,IAAI,EAAEmE,UAAU,GAAGzD,CAAC,GAAG6D,UAAU,CAAC,CACvCvE,IAAI,CAAC,IAAI,EAAEoE,SAAS,GAAG,EAAE,GAAGK,UAAU,CAAC,CACvC/B,KAAK,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CACnCA,KAAK,CAAC,cAAc,EAAEhC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAC5CgC,KAAK,CAAC,kBAAkB,EAAEhC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;IAC5D;;IAEA;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;MAC/BgE,SAAS,CAACpE,MAAM,CAAC,MAAM,CAAC,CACrBN,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAC1BA,IAAI,CAAC,IAAI,EAAEmE,UAAU,GAAG,EAAE,CAAC,CAC3BnE,IAAI,CAAC,IAAI,EAAEoE,SAAS,GAAG1D,CAAC,GAAG+D,UAAU,CAAC,CACtCzE,IAAI,CAAC,IAAI,EAAEmE,UAAU,GAAG,EAAE,GAAGI,UAAU,CAAC,CACxCvE,IAAI,CAAC,IAAI,EAAEoE,SAAS,GAAG1D,CAAC,GAAG+D,UAAU,CAAC,CACtC/B,KAAK,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CACnCA,KAAK,CAAC,cAAc,EAAEhC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAC7CgC,KAAK,CAAC,kBAAkB,EAAEhC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;IAC7D;;IAEA;IACAwD,MAAM,CAAC5B,OAAO,CAAC,CAACqC,KAAK,EAAEjE,CAAC,KAAK;MAC3B,MAAMvD,CAAC,GAAGgH,UAAU,GAAGzD,CAAC,GAAG6D,UAAU,GAAIA,UAAU,GAAG,CAAE;MACxD7E,GAAG,CAACY,MAAM,CAAC,MAAM,CAAC,CACfN,IAAI,CAAC,GAAG,EAAE7C,CAAC,CAAC,CACZ6C,IAAI,CAAC,GAAG,EAAEwE,MAAM,GAAG,EAAE,CAAC,CACtBxE,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7B0C,KAAK,CAAC,aAAa,EAAE,0BAA0B,CAAC,CAChDA,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3BA,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CACvBA,KAAK,CAAC,MAAM,EAAE7E,WAAW,CAAC+G,IAAI,CAACC,SAAS,CAAC,CACzCD,IAAI,CAACD,KAAK,CAAC;IAChB,CAAC,CAAC;;IAEF;IACA,KAAK,IAAIG,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAI,EAAE,EAAEA,GAAG,EAAE,EAAE;MAClC,MAAMC,YAAY,GAAGD,GAAG,GAAG,EAAE,GAAG,IAAIA,GAAG,EAAE,GAAG,GAAGA,GAAG,EAAE;MACpDpF,GAAG,CAACY,MAAM,CAAC,MAAM,CAAC,CACfN,IAAI,CAAC,GAAG,EAAEmE,UAAU,GAAG,EAAE,CAAC,CAC1BnE,IAAI,CAAC,GAAG,EAAEwE,MAAM,GAAG,CAACM,GAAG,GAAG,CAAC,IAAIL,UAAU,CAAC,CAC1CzE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAC1BA,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CACnC0C,KAAK,CAAC,aAAa,EAAE,0BAA0B,CAAC,CAChDA,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAC3BA,KAAK,CAAC,SAAS,EAAEoC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;MAAA,CAChDpC,KAAK,CAAC,MAAM,EAAE7E,WAAW,CAAC+G,IAAI,CAACC,SAAS,CAAC,CACzCD,IAAI,CAACG,YAAY,CAAC;IACvB;;IAEA;IACA5E,OAAO,CAACmC,OAAO,CAAClD,MAAM,IAAI;MACxB,MAAMjC,CAAC,GAAGgH,UAAU,GAAG,CAAC/E,MAAM,CAACuF,KAAK,GAAG,CAAC,IAAIJ,UAAU,GAAIA,UAAU,GAAG,CAAE,CAAC,CAAC;MAC3E,MAAMnH,CAAC,GAAGoH,MAAM,GAAG,CAACpF,MAAM,CAAC0F,GAAG,GAAG,CAAC,IAAIL,UAAU;MAEhD,MAAMjC,OAAO,GAAG9C,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAC5BN,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,aAAa7C,CAAC,IAAIC,CAAC,GAAG,CAAC;;MAE5C;MACA,MAAMwD,IAAI,GAAGjF,UAAU,CAACwG,mBAAmB,CAAC/C,MAAM,CAACT,KAAK,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;MACxE,MAAMP,MAAM,GAAGuE,KAAK,CAACC,IAAI,CAAC;QAACnD,MAAM,EAAE;MAAC,CAAC,EAAE,CAACoD,CAAC,EAAEnC,CAAC,KAAK;QAC/C,MAAMoC,KAAK,GAAGpC,CAAC,GAAG,EAAE;QACpB,OAAO;AACf,qBAAqB9E,KAAK,CAACmH,aAAa,CAACnC,IAAI,CAAC;AAC9C,wBAAwBlC,QAAQ,CAACU,MAAM,CAACT,KAAK,CAAC;AAC9C,oCAAoCmE,KAAK;AACzC,2BAA2B1D,MAAM,CAACT,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM;AAC/D,SAAS;MACH,CAAC,CAAC,CAACqE,IAAI,CAAC,EAAE,CAAC;MAEXR,OAAO,CAACS,IAAI,CAAC7E,MAAM,CAAC;;MAEpB;MACAoE,OAAO,CAAClC,MAAM,CAAC,QAAQ,CAAC,CACrBN,IAAI,CAAC,GAAG,EAAEY,IAAI,GAAGjF,UAAU,CAACyD,MAAM,CAAC8D,WAAW,CAAC,CAC/ClD,IAAI,CAAC,MAAM,EAAEpB,oBAAoB,CAACQ,MAAM,CAACT,KAAK,CAAC,CAAC,CAChDqB,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAEZ,MAAM,CAACT,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;;MAEvD;MACA6D,OAAO,CACJW,EAAE,CAAC,WAAW,EAAGhE,KAAK,IAAKD,eAAe,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAC,CAC1D+D,EAAE,CAAC,WAAW,EAAE5D,eAAe,CAAC,CAChC4D,EAAE,CAAC,UAAU,EAAE3D,cAAc,CAAC,CAC9BkD,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BA,KAAK,CAAC,YAAY,EAAE,qBAAqB,CAAC,CAC1CS,EAAE,CAAC,YAAY,EAAE,YAAW;QAC3B1H,EAAE,CAACkE,MAAM,CAAC,IAAI,CAAC,CAACyD,UAAU,CAAC,CAAC,CAACpD,IAAI,CAAC,WAAW,EAAE,aAAa7C,CAAC,IAAIC,CAAC,eAAe,CAAC;MACpF,CAAC,CAAC,CACD+F,EAAE,CAAC,YAAY,EAAE,YAAW;QAC3B1H,EAAE,CAACkE,MAAM,CAAC,IAAI,CAAC,CAACyD,UAAU,CAAC,CAAC,CAACpD,IAAI,CAAC,WAAW,EAAE,aAAa7C,CAAC,IAAIC,CAAC,YAAY,CAAC;MACjF,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA,CAACC,YAAY;IAACgC,KAAK,EAAEH,WAAY;IAACmH,GAAG,EAAElI,YAAa;IAAAmI,QAAA,gBAClDlJ,OAAA;MAAKiJ,GAAG,EAAEnI,MAAO;MAACL,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC;IAAM;MAAAyI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9CtI,WAAW,iBACVhB,OAAA,CAACF,OAAO;MACNyJ,IAAI,EAAEvI,WAAY;MAClBwI,QAAQ,EAAEtI,eAAgB;MAC1BY,WAAW,EAAEA,WAAY;MACzBa,QAAQ,EAAEA;IAAS;MAAAwG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEnB,CAAC;AAACzI,EAAA,CA7cIT,UAAU;AAAAqJ,GAAA,GAAVrJ,UAAU;AA+chB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAsJ,GAAA;AAAAC,YAAA,CAAAvJ,EAAA;AAAAuJ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}