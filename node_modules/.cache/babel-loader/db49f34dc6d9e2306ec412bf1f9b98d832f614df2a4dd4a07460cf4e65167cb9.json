{"ast":null,"code":"export const SizeConfig = {\n  // 基础布局尺寸\n  base: {\n    width: 1000,\n    minWidth: 600,\n    padding: 20,\n    titlePadding: 200,\n    aspectRatio: 4 / 3 // 高宽比 4:3\n  },\n  // 网格相关尺寸\n  grid: {\n    cellSize: 30,\n    monthWidth: 100,\n    dayHeight: 30\n  },\n  // 花朵相关尺寸\n  flower: {\n    baseSize: 18,\n    // 基础大小\n    sizeVariation: 0.9,\n    // 大小变化系数 (score的影响)\n    centerRatio: 0.4,\n    // 花芯与花瓣的比例\n    petalCount: 8 // 花瓣数量\n  },\n  // 图例相关尺寸\n  legend: {\n    width: 180,\n    padding: 15,\n    itemSize: 30\n  },\n  // 响应式断点\n  breakpoints: {\n    mobile: 768,\n    tablet: 1024,\n    desktop: 1200\n  },\n  // 计算实际尺寸的方法\n  calculateFlowerSize(score, isRandomView = false) {\n    const normalizedScore = (score + 5) / 10; // 将-5到5归一化到0-1\n    const baseSize = isRandomView ? this.flower.baseSize * 0.9 // 随机视图放大花朵\n    : this.flower.baseSize * 0.6; // 日历视图稍微缩小花朵\n    return baseSize * (1 + normalizedScore * this.flower.sizeVariation);\n  },\n  calculateContainerHeight() {\n    // 根据宽度和高宽比计算高度\n    return this.base.width * this.base.aspectRatio;\n  },\n  // 计算实际渲染高度\n  calculateScaledHeight(containerWidth) {\n    const rawHeight = this.calculateContainerHeight();\n    const scaleFactor = this.getScaleFactor(containerWidth);\n    return rawHeight * scaleFactor;\n  },\n  // 获取缩放比例的方法\n  getScaleFactor(containerWidth) {\n    const minScale = 0.5; // 最小缩放比例\n    const maxScale = 1.0; // 最大缩放比例\n    const scale = containerWidth / this.base.width;\n\n    // 确保缩放比例在合理范围内\n    return Math.max(minScale, Math.min(maxScale, scale));\n  }\n};","map":{"version":3,"names":["SizeConfig","base","width","minWidth","padding","titlePadding","aspectRatio","grid","cellSize","monthWidth","dayHeight","flower","baseSize","sizeVariation","centerRatio","petalCount","legend","itemSize","breakpoints","mobile","tablet","desktop","calculateFlowerSize","score","isRandomView","normalizedScore","calculateContainerHeight","calculateScaledHeight","containerWidth","rawHeight","scaleFactor","getScaleFactor","minScale","maxScale","scale","Math","max","min"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/utils/sizeConfig.js"],"sourcesContent":["export const SizeConfig = {\n  // 基础布局尺寸\n  base: {\n    width: 1000,\n    minWidth: 600,\n    padding: 20,\n    titlePadding: 200,\n    aspectRatio: 4/3, // 高宽比 4:3\n  },\n  \n  // 网格相关尺寸\n  grid: {\n    cellSize: 30,\n    monthWidth: 100,\n    dayHeight: 30\n  },\n  \n  // 花朵相关尺寸\n  flower: {\n    baseSize: 18,          // 基础大小\n    sizeVariation: 0.9,    // 大小变化系数 (score的影响)\n    centerRatio: 0.4,      // 花芯与花瓣的比例\n    petalCount: 8,         // 花瓣数量\n  },\n  \n  // 图例相关尺寸\n  legend: {\n    width: 180,\n    padding: 15,\n    itemSize: 30\n  },\n  \n  // 响应式断点\n  breakpoints: {\n    mobile: 768,\n    tablet: 1024,\n    desktop: 1200\n  },\n  \n  // 计算实际尺寸的方法\n  calculateFlowerSize(score, isRandomView = false) {\n    const normalizedScore = (score + 5) / 10; // 将-5到5归一化到0-1\n    const baseSize = isRandomView \n      ? this.flower.baseSize * 0.9  // 随机视图放大花朵\n      : this.flower.baseSize * 0.6; // 日历视图稍微缩小花朵\n    return baseSize * (1 + normalizedScore * this.flower.sizeVariation);\n  },\n  \n  calculateContainerHeight() {\n    // 根据宽度和高宽比计算高度\n    return this.base.width * this.base.aspectRatio;\n  }, \n  \n  // 计算实际渲染高度\n  calculateScaledHeight(containerWidth) {\n    const rawHeight = this.calculateContainerHeight();\n    const scaleFactor = this.getScaleFactor(containerWidth);\n    return rawHeight * scaleFactor;\n  },\n\n  // 获取缩放比例的方法\n  getScaleFactor(containerWidth) {\n    const minScale = 0.5; // 最小缩放比例\n    const maxScale = 1.0; // 最大缩放比例\n    const scale = containerWidth / this.base.width;\n    \n    // 确保缩放比例在合理范围内\n    return Math.max(minScale, Math.min(maxScale, scale));\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG;EACxB;EACAC,IAAI,EAAE;IACJC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,GAAG;IACjBC,WAAW,EAAE,CAAC,GAAC,CAAC,CAAE;EACpB,CAAC;EAED;EACAC,IAAI,EAAE;IACJC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,GAAG;IACfC,SAAS,EAAE;EACb,CAAC;EAED;EACAC,MAAM,EAAE;IACNC,QAAQ,EAAE,EAAE;IAAW;IACvBC,aAAa,EAAE,GAAG;IAAK;IACvBC,WAAW,EAAE,GAAG;IAAO;IACvBC,UAAU,EAAE,CAAC,CAAU;EACzB,CAAC;EAED;EACAC,MAAM,EAAE;IACNd,KAAK,EAAE,GAAG;IACVE,OAAO,EAAE,EAAE;IACXa,QAAQ,EAAE;EACZ,CAAC;EAED;EACAC,WAAW,EAAE;IACXC,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE;EACX,CAAC;EAED;EACAC,mBAAmBA,CAACC,KAAK,EAAEC,YAAY,GAAG,KAAK,EAAE;IAC/C,MAAMC,eAAe,GAAG,CAACF,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1C,MAAMX,QAAQ,GAAGY,YAAY,GACzB,IAAI,CAACb,MAAM,CAACC,QAAQ,GAAG,GAAG,CAAE;IAAA,EAC5B,IAAI,CAACD,MAAM,CAACC,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChC,OAAOA,QAAQ,IAAI,CAAC,GAAGa,eAAe,GAAG,IAAI,CAACd,MAAM,CAACE,aAAa,CAAC;EACrE,CAAC;EAEDa,wBAAwBA,CAAA,EAAG;IACzB;IACA,OAAO,IAAI,CAACzB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAACK,WAAW;EAChD,CAAC;EAED;EACAqB,qBAAqBA,CAACC,cAAc,EAAE;IACpC,MAAMC,SAAS,GAAG,IAAI,CAACH,wBAAwB,CAAC,CAAC;IACjD,MAAMI,WAAW,GAAG,IAAI,CAACC,cAAc,CAACH,cAAc,CAAC;IACvD,OAAOC,SAAS,GAAGC,WAAW;EAChC,CAAC;EAED;EACAC,cAAcA,CAACH,cAAc,EAAE;IAC7B,MAAMI,QAAQ,GAAG,GAAG,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,GAAG,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGN,cAAc,GAAG,IAAI,CAAC3B,IAAI,CAACC,KAAK;;IAE9C;IACA,OAAOiC,IAAI,CAACC,GAAG,CAACJ,QAAQ,EAAEG,IAAI,CAACE,GAAG,CAACJ,QAAQ,EAAEC,KAAK,CAAC,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}