{"ast":null,"code":"var _jsxFileName = \"/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/FlowerView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport { Utils } from '../utils/flowerUtils';\nimport Tooltip from './Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SVGContainer = styled.div`\n  // {{移除 position, left, top, height, display}}\n  // position: absolute; \n  // left: 0;\n  // top: 0;\n  // height: 100%; \n  // display: flex;\n  // flex-direction: column;\n  width: 100%; // {{保留 width}}\n`;\n_c = SVGContainer;\nconst FlowerView = ({\n  flowerData,\n  isRandomView,\n  currentTheme,\n  dimensions = {\n    width: 0,\n    height: 0\n  },\n  // 添加默认值\n  setDimensions,\n  // 添加 setDimensions 到 props\n  selectedFlower,\n  setSelectedFlower\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null); // Ref is attached to SVGContainer\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 添加尺寸计算逻辑\n  useEffect(() => {\n    if (!containerRef.current) return; // Checks the ref for the inner container\n\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        // Uses the ref for the inner container\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        if (width !== dimensions.width || height !== dimensions.height) {\n          if (typeof setDimensions === 'function') {\n            setDimensions({\n              width,\n              height\n            });\n          }\n        }\n      }\n    };\n    updateDimensions();\n    const resizeObserver = new ResizeObserver(updateDimensions);\n    resizeObserver.observe(containerRef.current); // Observes the inner container\n\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, []);\n\n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n\n  // 获取颜色比例尺\n  const getColorScale = () => {\n    const theme = colorThemes[currentTheme];\n    return d3.scaleLinear().domain([-5, -2.5, 0, 2.5, 5]).range([theme.colors.petals.negative[0], theme.colors.petals.negative[2], theme.colors.petals.neutral, theme.colors.petals.positive[2], theme.colors.petals.positive[0]]).interpolate(d3.interpolateHcl);\n  };\n\n  // 获取花朵颜色\n  const getColor = score => {\n    return getColorScale()(score);\n  };\n\n  // 获取花芯颜色\n  const getFlowerCenterColor = score => {\n    const centers = themeColors.centers;\n    if (score >= 4) return centers.positive;\n    if (score >= 2) return centers.highPositive;\n    if (score > 0) return centers.lowPositive;\n    if (score === 0) return centers.neutral;\n    if (score > -2) return centers.lowNegative;\n    if (score > -4) return centers.highNegative;\n    return centers.negative;\n  };\n\n  // 处理鼠标悬停事件\n  const handleMouseOver = (event, flower) => {\n    setTooltipData(flower);\n    const {\n      clientX,\n      clientY\n    } = event;\n    setTooltipPosition({\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    setTooltipPosition({\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  // 处理鼠标离开事件\n  const handleMouseOut = () => {\n    setTooltipData(null);\n  };\n\n  // 绘制花朵\n  useEffect(() => {\n    if (!svgRef.current || !dimensions || !dimensions.width || !flowerData.length) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const viewboxWidth = dimensions.width;\n    let viewboxHeight; // {{ 将 viewboxHeight 声明提前 }}\n\n    const currentThemeColors = colorThemes[currentTheme].colors;\n    if (isRandomView) {\n      // {{ 随机视图使用固定高度 }}\n      viewboxHeight = 600;\n      const drawDimensions = {\n        width: viewboxWidth,\n        height: viewboxHeight\n      };\n      drawRandomFlowers(svg, flowerData, drawDimensions, currentThemeColors);\n    } else {\n      // {{ 日历视图动态计算高度 }}\n      const calendarTopPadding = 60; // 月份标签 + 上边距\n      const calendarBottomPadding = 30; // 底部边距\n      const dayRowHeight = 22; // 每天的行高 (可以调整)\n      viewboxHeight = calendarTopPadding + 31 * dayRowHeight + calendarBottomPadding;\n      const drawDimensions = {\n        width: viewboxWidth,\n        height: viewboxHeight\n      };\n      // {{ 调用修改后的 drawCalendarFlowers，传入计算好的尺寸和主题 }}\n      drawCalendarFlowers(svg, flowerData, drawDimensions, currentThemeColors);\n    }\n\n    // {{ 使用最终确定的 viewboxHeight 设置 viewBox }}\n    svg.attr(\"viewBox\", `0 0 ${viewboxWidth} ${viewboxHeight}`).attr(\"width\", \"100%\").style(\"display\", \"block\");\n  }, [flowerData, dimensions.width, isRandomView, currentTheme]);\n\n  // {{修改函数签名以接收 themeColors}}\n  const drawRandomFlowers = (svg, flowers, {\n    width,\n    height\n  }, themeColors) => {\n    // 创建花朵和绿叶容器\n    const flowerContainer = svg.append(\"g\").attr(\"class\", \"flower-container\");\n\n    // 添加背景绿叶 - 逐步恢复\n    const leafCount = Math.min(flowers.length * 1.2, 100);\n    for (let i = 0; i < leafCount; i++) {\n      var _themeColors$leaf;\n      // {{恢复原始 x, y 计算 (带边距)}}\n      const x = Math.random() * width * 0.9 + width * 0.05;\n      const y = Math.random() * height * 0.9 + height * 0.05;\n      const size = Math.random() * 15 + 10;\n      const opacity = Math.random() * 0.4 + 0.2;\n      // {{恢复 rotation 计算}}\n      const rotation = Math.random() * 360;\n      const leafG = flowerContainer.append(\"g\").attr(\"transform\", `translate(${x}, ${y})`); // 保持G元素只有 translate\n\n      leafG.append(\"path\").attr(\"d\", Utils.generateLeaf(size)).attr(\"fill\", ((_themeColors$leaf = themeColors.leaf) === null || _themeColors$leaf === void 0 ? void 0 : _themeColors$leaf.color) || \"#C1D9B3\").attr(\"opacity\", opacity)\n      // {{恢复 path 元素的 rotate transform}}\n      .attr(\"transform\", `rotate(${rotation})`);\n    }\n\n    // 随机分布花朵 - 使用传入的 width 和 height\n    flowers.forEach((flower, i) => {\n      // 使用传入的 dimensions 计算 x, y\n      const x = Math.random() * width * 0.8 + width * 0.1;\n      const y = Math.random() * height * 0.8 + height * 0.1;\n      const flowerG = flowerContainer.append(\"g\").attr(\"class\", \"flower-base\").attr(\"transform\", `translate(${x}, ${y})`); // 使用新的 x, y\n\n      // -------- Start: 添加缺失的花朵绘制代码 --------\n      // 添加动画层 - 使用更细微的动画\n      const animationLayer = flowerG.append(\"g\").attr(\"class\", `gentle-float${Math.floor(Math.random() * 4 + 1)}`).style(\"animation-delay\", `${Math.random() * 2}s`);\n\n      // 绘制花瓣 - 调整大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, true) * 0.9; // 稍微缩小花朵\n      const petals = Array.from({\n        length: 8\n      }, (_, j) => {\n        // 假设8个花瓣\n        const angle = j * 45;\n        return `\n            <path d=\"${Utils.generatePetal(size)}\" \n                  fill=\"${getColor(flower.score)}\"\n                  transform=\"rotate(${angle})\"\n                  opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n          `;\n      }).join('');\n      animationLayer.html(petals);\n\n      // 添加花芯\n      animationLayer.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\") // 或使用 themeColors 相关颜色\n      .attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n      // -------- End: 添加缺失的花朵绘制代码 --------\n\n      // 添加事件处理\n      flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut).style(\"cursor\", \"pointer\").style(\"transition\", \"transform 0.2s ease\").on(\"mouseenter\", function () {\n        // 事件处理保持不变\n        d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1.15)`); // 确保使用更新后的 x, y\n      }).on(\"mouseleave\", function () {\n        // 事件处理保持不变\n        d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1)`); // 确保使用更新后的 x, y\n      });\n    });\n  };\n\n  // 绘制背景绿叶\n  const drawBackgroundLeaves = (container, centerX, centerY) => {\n    const leafCount = Math.floor(flowerData.length * 1.8);\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n\n    // 利用整个容器空间\n    const usableWidth = width * 0.9;\n    const usableHeight = height - titlePadding * 1.5;\n    const marginX = (width - usableWidth) / 2;\n    const marginY = titlePadding + 20;\n    const leaves = Array.from({\n      length: leafCount\n    }, (_, i) => {\n      return {\n        x: marginX + Math.random() * usableWidth,\n        y: marginY + Math.random() * usableHeight,\n        size: 12 + Math.random() * 20,\n        angle: Math.random() * 360,\n        id: i\n      };\n    });\n    const leafGroup = container.append(\"g\").attr(\"class\", \"leaf-group\");\n    leaves.forEach(leaf => {\n      const leafColors = [\"rgba(76, 175, 80, 0.6)\", \"rgba(67, 160, 71, 0.5)\", \"rgba(56, 142, 60, 0.4)\", \"rgba(46, 125, 50, 0.3)\"];\n      const leafG = leafGroup.append(\"g\").attr(\"class\", \"leaf-base\").attr(\"transform\", `translate(${leaf.x}, ${leaf.y})`);\n      const leafAnimLayer = leafG.append(\"g\").attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`).style(\"animation-delay\", `${Math.random() * 3}s`).style(\"animation-duration\", `${7 + Math.random() * 4}s`);\n      leafAnimLayer.append(\"path\").attr(\"d\", Utils.generateLeaf(leaf.size)).attr(\"fill\", leafColors[Math.floor(Math.random() * leafColors.length)]).attr(\"transform\", `rotate(${leaf.angle})`).attr(\"opacity\", 0.5 + Math.random() * 0.3);\n    });\n  };\n\n  // 绘制花瓣\n  const drawFlowerPetals = (container, flower) => {\n    const size = SizeConfig.calculateFlowerSize(flower.score, true);\n    const petals = Array.from({\n      length: SizeConfig.flower.petalCount\n    }, (_, j) => {\n      const angle = j * (360 / SizeConfig.flower.petalCount);\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.95' : '1'}\"\n            ${flower.score === 0 ? 'stroke=\"#AAA\" stroke-width=\"0.5\"' : ''}/>\n      `;\n    }).join('');\n\n    // 添加花瓣到动画层\n    container.html(petals);\n\n    // 添加花芯\n    container.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", 1.5);\n  };\n\n  // 绘制日历视图的花朵\n  const drawCalendarFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // 优化边距使花朵分布更加均匀\n    const leftMargin = width * 0.08;\n    const topMargin = titlePadding * 0.8;\n    const bottomMargin = height * 0.05;\n    const rightMargin = width * 0.15; // 增加右侧边距，为图例留出空间\n\n    // 计算可用宽度和高度\n    const usableWidth = width - leftMargin - rightMargin;\n    const usableHeight = height - topMargin - bottomMargin;\n\n    // 计算月份和日期的间距\n    const monthWidth = usableWidth / 12;\n    const startY = topMargin;\n    const daySpacing = Math.min(usableHeight / 31, 22); // 限制最大间距，避免日期过于分散\n\n    // 添加背景网格辅助线\n    const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n\n    // 月份分隔线\n    for (let i = 0; i <= 12; i++) {\n      gridGroup.append(\"line\").attr(\"class\", \"grid-line\").attr(\"x1\", leftMargin + i * monthWidth).attr(\"y1\", topMargin - 20).attr(\"x2\", leftMargin + i * monthWidth).attr(\"y2\", topMargin + 31 * daySpacing).style(\"stroke\", \"rgba(0,0,0,0.05)\").style(\"stroke-width\", i % 3 === 0 ? 1 : 0.5).style(\"stroke-dasharray\", i % 3 === 0 ? \"none\" : \"3,3\");\n    }\n\n    // 每5天的水平分隔线\n    for (let i = 0; i <= 31; i += 5) {\n      gridGroup.append(\"line\").attr(\"class\", \"grid-line\").attr(\"x1\", leftMargin - 10).attr(\"y1\", topMargin + i * daySpacing).attr(\"x2\", leftMargin + 12 * monthWidth).attr(\"y2\", topMargin + i * daySpacing).style(\"stroke\", \"rgba(0,0,0,0.05)\").style(\"stroke-width\", i % 10 === 0 ? 1 : 0.5).style(\"stroke-dasharray\", i % 10 === 0 ? \"none\" : \"3,3\");\n    }\n\n    // 添加月份标签 - 优化字体大小和位置\n    months.forEach((month, i) => {\n      const x = leftMargin + i * monthWidth + monthWidth / 2;\n      svg.append(\"text\").attr(\"x\", x).attr(\"y\", startY - 30).attr(\"class\", \"month-text\").attr(\"text-anchor\", \"middle\").style(\"font-family\", \"'Montserrat', sans-serif\").style(\"font-size\", \"14px\").style(\"font-weight\", \"600\").style(\"opacity\", \"0.7\").style(\"fill\", themeColors.text.secondary).text(month);\n    });\n\n    // 添加日期标签 - 优化字体大小和位置\n    for (let day = 1; day <= 31; day++) {\n      const formattedDay = day < 10 ? `0${day}` : `${day}`;\n      svg.append(\"text\").attr(\"x\", leftMargin - 15).attr(\"y\", startY + (day - 1) * daySpacing).attr(\"class\", \"day-text\").attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"middle\").style(\"font-family\", \"'Montserrat', sans-serif\").style(\"font-size\", \"12px\").style(\"font-weight\", \"500\").style(\"opacity\", day % 5 === 0 ? \"0.7\" : \"0.5\") // 每5天的标签更明显\n      .style(\"fill\", themeColors.text.secondary).text(formattedDay);\n    }\n\n    // 创建花朵 - 优化花朵大小和位置\n    flowers.forEach(flower => {\n      const x = leftMargin + (flower.month - 1) * monthWidth + monthWidth / 2; // 修正月份索引从1开始\n      const y = startY + (flower.day - 1) * daySpacing;\n      const flowerG = svg.append(\"g\").attr(\"class\", \"flower\").attr(\"transform\", `translate(${x},${y})`);\n\n      // 绘制花瓣 - 调整花朵大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, false) * 0.8; // 稍微缩小花朵\n      const petals = Array.from({\n        length: 8\n      }, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n        `;\n      }).join('');\n      flowerG.html(petals);\n\n      // 添加花芯\n      flowerG.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n\n      // 添加事件处理\n      flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut).style(\"cursor\", \"pointer\").style(\"transition\", \"transform 0.2s ease\").on(\"mouseenter\", function () {\n        d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1.15)`);\n      }).on(\"mouseleave\", function () {\n        d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1)`);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SVGContainer, {\n    theme: themeColors,\n    ref: containerRef,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"100%\",\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), tooltipData && /*#__PURE__*/_jsxDEV(Tooltip, {\n      data: tooltipData,\n      position: tooltipPosition,\n      themeColors: themeColors,\n      getColor: getColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n\n// {{ 修改 drawCalendarFlowers 函数签名以接收参数 }}\n_s(FlowerView, \"pWeZdnX9vq0AhJf89hy6R7otN9E=\");\n_c2 = FlowerView;\nconst drawCalendarFlowers = (svg, flowers, {\n  width,\n  height\n}, themeColors) => {\n  // {{ 使用传入的 width 和 height，移除从 SizeConfig 获取的 width/height }}\n  // const width = SizeConfig.base.width; // 移除\n  // const height = SizeConfig.calculateContainerHeight(); // 移除\n  const titlePadding = SizeConfig.base.titlePadding; // 可以保留用于某些相对计算，或替换为固定值\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // {{ 基于传入的 width 和 height (viewBoxHeight) 重新计算边距和可用空间 }}\n  const leftMargin = width * 0.08;\n  const rightMargin = width * 0.15; // 为图例留空间\n  const calendarTopOffset = 60; // 对应 useEffect 中的 calendarTopPadding\n  const calendarBottomOffset = 30; // 对应 useEffect 中的 calendarBottomPadding\n\n  const usableWidth = width - leftMargin - rightMargin;\n  // const usableHeight = height - topMargin - bottomMargin; // 移除旧计算\n\n  const monthWidth = usableWidth / 12;\n  const startY = calendarTopOffset; // Y 轴起始位置\n  const daySpacing = 22; // {{ 使用与 useEffect 中一致的固定行高 }} \n  // 或基于传入的 height 计算: (height - calendarTopOffset - calendarBottomOffset) / 31;\n\n  // 添加背景网格辅助线\n  const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n\n  // 月份分隔线 (调整 Y 坐标)\n  gridGroup.append(\"line\").attr(\"y1\", startY - 20) // 相对 startY 调整\n  .attr(\"y2\", startY + 31 * daySpacing); // 相对 startY 调整\n\n  // 水平分隔线 (调整 Y 坐标)\n  gridGroup.append(\"line\").attr(\"y1\", startY + i * daySpacing) // 相对 startY 调整\n  .attr(\"y2\", startY + i * daySpacing); // 相对 startY 调整\n\n  // 月份标签 (调整 Y 坐标)\n  svg.append(\"text\").attr(\"y\", startY - 30) // 相对 startY 调整\n  // ... 其他属性 ...\n  .style(\"fill\", themeColors.text.secondary) // {{使用传入的 themeColors}}\n  .text(month);\n\n  // 日期标签 (调整 Y 坐标)\n  svg.append(\"text\").attr(\"y\", startY + (day - 1) * daySpacing) // 相对 startY 调整\n  // ... 其他属性 ...\n  .style(\"fill\", themeColors.text.secondary) // {{使用传入的 themeColors}}\n  .text(formattedDay);\n\n  // 创建花朵 - 优化花朵大小和位置\n  flowers.forEach(flower => {\n    const x = leftMargin + (flower.month - 1) * monthWidth + monthWidth / 2;\n    // {{ 使用新的 startY 和 daySpacing 计算 Y 坐标 }}\n    const y = startY + (flower.day - 1) * daySpacing;\n    const flowerG = svg.append(\"g\").attr(\"class\", \"flower\").attr(\"transform\", `translate(${x},${y})`);\n\n    // 绘制花瓣 - 调整花朵大小\n    const size = SizeConfig.calculateFlowerSize(flower.score, false) * 0.8; // 稍微缩小花朵\n    const petals = Array.from({\n      length: 8\n    }, (_, i) => {\n      const angle = i * 45;\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n      `;\n    }).join('');\n    flowerG.html(petals);\n\n    // 添加花芯\n    flowerG.append(\"circle\").attr(\"r\", size * SizeConfig.flower.centerRatio).attr(\"fill\", getFlowerCenterColor(flower.score)).attr(\"stroke\", \"#FFCDB2\").attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n\n    // 添加事件处理\n    flowerG.on(\"mouseover\", event => handleMouseOver(event, flower)).on(\"mousemove\", handleMouseMove).on(\"mouseout\", handleMouseOut).style(\"cursor\", \"pointer\").style(\"transition\", \"transform 0.2s ease\").on(\"mouseenter\", function () {\n      d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1.15)`);\n    }).on(\"mouseleave\", function () {\n      d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1)`);\n    });\n  });\n};\nexport default FlowerView;\nvar _c, _c2;\n$RefreshReg$(_c, \"SVGContainer\");\n$RefreshReg$(_c2, \"FlowerView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","d3","colorThemes","SizeConfig","Utils","Tooltip","jsxDEV","_jsxDEV","SVGContainer","div","_c","FlowerView","flowerData","isRandomView","currentTheme","dimensions","width","height","setDimensions","selectedFlower","setSelectedFlower","_s","svgRef","containerRef","tooltipData","setTooltipData","tooltipPosition","setTooltipPosition","x","y","current","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","observe","unobserve","themeColors","colors","getColorScale","theme","scaleLinear","domain","range","petals","negative","neutral","positive","interpolate","interpolateHcl","getColor","score","getFlowerCenterColor","centers","highPositive","lowPositive","lowNegative","highNegative","handleMouseOver","event","flower","clientX","clientY","handleMouseMove","handleMouseOut","length","svg","select","selectAll","remove","viewboxWidth","viewboxHeight","currentThemeColors","drawDimensions","drawRandomFlowers","calendarTopPadding","calendarBottomPadding","dayRowHeight","drawCalendarFlowers","attr","style","flowers","flowerContainer","append","leafCount","Math","min","i","_themeColors$leaf","random","size","opacity","rotation","leafG","generateLeaf","leaf","color","forEach","flowerG","animationLayer","floor","calculateFlowerSize","Array","from","_","j","angle","generatePetal","join","html","centerRatio","on","transition","drawBackgroundLeaves","container","centerX","centerY","base","calculateContainerHeight","titlePadding","usableWidth","usableHeight","marginX","marginY","leaves","id","leafGroup","leafColors","leafAnimLayer","drawFlowerPetals","petalCount","months","leftMargin","topMargin","bottomMargin","rightMargin","monthWidth","startY","daySpacing","gridGroup","month","text","secondary","day","formattedDay","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","data","position","_c2","calendarTopOffset","calendarBottomOffset","$RefreshReg$"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/components/FlowerView.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { colorThemes } from '../utils/themes';\nimport { SizeConfig } from '../utils/sizeConfig';\nimport { Utils } from '../utils/flowerUtils';\nimport Tooltip from './Tooltip';\n\nconst SVGContainer = styled.div`\n  // {{移除 position, left, top, height, display}}\n  // position: absolute; \n  // left: 0;\n  // top: 0;\n  // height: 100%; \n  // display: flex;\n  // flex-direction: column;\n  width: 100%; // {{保留 width}}\n`;\n\nconst FlowerView = ({ \n  flowerData, \n  isRandomView, \n  currentTheme, \n  dimensions = { width: 0, height: 0 }, // 添加默认值\n  setDimensions, // 添加 setDimensions 到 props\n  selectedFlower,\n  setSelectedFlower\n}) => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null); // Ref is attached to SVGContainer\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  // 添加尺寸计算逻辑\n  useEffect(() => {\n    if (!containerRef.current) return; // Checks the ref for the inner container\n    \n    const updateDimensions = () => {\n      if (containerRef.current) { // Uses the ref for the inner container\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        if (width !== dimensions.width || height !== dimensions.height) {\n          if (typeof setDimensions === 'function') {\n            setDimensions({ width, height });\n          }\n        }\n      }\n    };\n    \n    updateDimensions();\n    \n    const resizeObserver = new ResizeObserver(updateDimensions);\n    resizeObserver.observe(containerRef.current); // Observes the inner container\n    \n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, []);\n  \n  // 获取当前主题颜色\n  const themeColors = colorThemes[currentTheme].colors;\n  \n  // 获取颜色比例尺\n  const getColorScale = () => {\n    const theme = colorThemes[currentTheme];\n    return d3.scaleLinear()\n      .domain([-5, -2.5, 0, 2.5, 5])\n      .range([\n        theme.colors.petals.negative[0],\n        theme.colors.petals.negative[2],\n        theme.colors.petals.neutral,\n        theme.colors.petals.positive[2],\n        theme.colors.petals.positive[0]\n      ])\n      .interpolate(d3.interpolateHcl);\n  };\n  \n  // 获取花朵颜色\n  const getColor = (score) => {\n    return getColorScale()(score);\n  };\n  \n  // 获取花芯颜色\n  const getFlowerCenterColor = (score) => {\n    const centers = themeColors.centers;\n    \n    if (score >= 4) return centers.positive;\n    if (score >= 2) return centers.highPositive;\n    if (score > 0) return centers.lowPositive;\n    if (score === 0) return centers.neutral;\n    if (score > -2) return centers.lowNegative;\n    if (score > -4) return centers.highNegative;\n    return centers.negative;\n  };\n\n  // 处理鼠标悬停事件\n  const handleMouseOver = (event, flower) => {\n    setTooltipData(flower);\n    const { clientX, clientY } = event;\n    setTooltipPosition({ x: clientX, y: clientY });\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = (event) => {\n    const { clientX, clientY } = event;\n    setTooltipPosition({ x: clientX, y: clientY });\n  };\n\n  // 处理鼠标离开事件\n  const handleMouseOut = () => {\n    setTooltipData(null);\n  };\n\n  // 绘制花朵\n  useEffect(() => {\n    if (!svgRef.current || !dimensions || !dimensions.width || !flowerData.length) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const viewboxWidth = dimensions.width; \n    let viewboxHeight; // {{ 将 viewboxHeight 声明提前 }}\n\n    const currentThemeColors = colorThemes[currentTheme].colors; \n\n    if (isRandomView) {\n      // {{ 随机视图使用固定高度 }}\n      viewboxHeight = 600; \n      const drawDimensions = { width: viewboxWidth, height: viewboxHeight };\n      drawRandomFlowers(svg, flowerData, drawDimensions, currentThemeColors); \n    } else {\n      // {{ 日历视图动态计算高度 }}\n      const calendarTopPadding = 60; // 月份标签 + 上边距\n      const calendarBottomPadding = 30; // 底部边距\n      const dayRowHeight = 22; // 每天的行高 (可以调整)\n      viewboxHeight = calendarTopPadding + (31 * dayRowHeight) + calendarBottomPadding; \n      \n      const drawDimensions = { width: viewboxWidth, height: viewboxHeight };\n      // {{ 调用修改后的 drawCalendarFlowers，传入计算好的尺寸和主题 }}\n      drawCalendarFlowers(svg, flowerData, drawDimensions, currentThemeColors); \n    }\n\n    // {{ 使用最终确定的 viewboxHeight 设置 viewBox }}\n    svg.attr(\"viewBox\", `0 0 ${viewboxWidth} ${viewboxHeight}`) \n       .attr(\"width\", \"100%\") \n       .style(\"display\", \"block\"); \n\n  }, [flowerData, dimensions.width, isRandomView, currentTheme]); \n\n  // {{修改函数签名以接收 themeColors}}\n  const drawRandomFlowers = (svg, flowers, { width, height }, themeColors) => { \n      \n      // 创建花朵和绿叶容器\n      const flowerContainer = svg.append(\"g\")\n        .attr(\"class\", \"flower-container\");\n        \n      // 添加背景绿叶 - 逐步恢复\n      const leafCount = Math.min(flowers.length * 1.2, 100);\n      for (let i = 0; i < leafCount; i++) {\n        // {{恢复原始 x, y 计算 (带边距)}}\n        const x = Math.random() * width * 0.9 + width * 0.05; \n        const y = Math.random() * height * 0.9 + height * 0.05; \n        const size = Math.random() * 15 + 10; \n        const opacity = Math.random() * 0.4 + 0.2; \n        // {{恢复 rotation 计算}}\n        const rotation = Math.random() * 360; \n        \n        const leafG = flowerContainer.append(\"g\")\n          .attr(\"transform\", `translate(${x}, ${y})`); // 保持G元素只有 translate\n          \n        leafG.append(\"path\")\n          .attr(\"d\", Utils.generateLeaf(size)) \n          .attr(\"fill\", themeColors.leaf?.color || \"#C1D9B3\") \n          .attr(\"opacity\", opacity)\n          // {{恢复 path 元素的 rotate transform}}\n          .attr(\"transform\", `rotate(${rotation})`); \n      }\n      \n      // 随机分布花朵 - 使用传入的 width 和 height\n      flowers.forEach((flower, i) => {\n        // 使用传入的 dimensions 计算 x, y\n        const x = Math.random() * width * 0.8 + width * 0.1;\n        const y = Math.random() * height * 0.8 + height * 0.1;\n        \n        const flowerG = flowerContainer.append(\"g\")\n          .attr(\"class\", \"flower-base\")\n          .attr(\"transform\", `translate(${x}, ${y})`); // 使用新的 x, y\n        \n        // -------- Start: 添加缺失的花朵绘制代码 --------\n        // 添加动画层 - 使用更细微的动画\n        const animationLayer = flowerG.append(\"g\")\n          .attr(\"class\", `gentle-float${Math.floor(Math.random() * 4 + 1)}`)\n          .style(\"animation-delay\", `${Math.random() * 2}s`);\n\n        // 绘制花瓣 - 调整大小\n        const size = SizeConfig.calculateFlowerSize(flower.score, true) * 0.9; // 稍微缩小花朵\n        const petals = Array.from({length: 8}, (_, j) => { // 假设8个花瓣\n          const angle = j * 45;\n          return `\n            <path d=\"${Utils.generatePetal(size)}\" \n                  fill=\"${getColor(flower.score)}\"\n                  transform=\"rotate(${angle})\"\n                  opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n          `;\n        }).join('');\n        \n        animationLayer.html(petals);\n        \n        // 添加花芯\n        animationLayer.append(\"circle\")\n          .attr(\"r\", size * SizeConfig.flower.centerRatio)\n          .attr(\"fill\", getFlowerCenterColor(flower.score))\n          .attr(\"stroke\", \"#FFCDB2\") // 或使用 themeColors 相关颜色\n          .attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n        // -------- End: 添加缺失的花朵绘制代码 --------\n\n        // 添加事件处理\n        flowerG\n          .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n          .on(\"mousemove\", handleMouseMove)\n          .on(\"mouseout\", handleMouseOut)\n          .style(\"cursor\", \"pointer\")\n          .style(\"transition\", \"transform 0.2s ease\")\n          .on(\"mouseenter\", function() { // 事件处理保持不变\n            d3.select(this).transition()\n              .attr(\"transform\", `translate(${x},${y}) scale(1.15)`); // 确保使用更新后的 x, y\n          })\n          .on(\"mouseleave\", function() { // 事件处理保持不变\n            d3.select(this).transition()\n              .attr(\"transform\", `translate(${x},${y}) scale(1)`); // 确保使用更新后的 x, y\n          });\n      });\n    };\n\n  // 绘制背景绿叶\n  const drawBackgroundLeaves = (container, centerX, centerY) => {\n    const leafCount = Math.floor(flowerData.length * 1.8);\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    \n    // 利用整个容器空间\n    const usableWidth = width * 0.9;\n    const usableHeight = height - titlePadding * 1.5;\n    const marginX = (width - usableWidth) / 2;\n    const marginY = titlePadding + 20;\n  \n    const leaves = Array.from({length: leafCount}, (_, i) => {\n      return {\n        x: marginX + Math.random() * usableWidth,\n        y: marginY + Math.random() * usableHeight,\n        size: 12 + Math.random() * 20,\n        angle: Math.random() * 360,\n        id: i\n      };\n    });\n      \n    const leafGroup = container.append(\"g\")\n      .attr(\"class\", \"leaf-group\");\n      \n    leaves.forEach(leaf => {\n      const leafColors = [\n        \"rgba(76, 175, 80, 0.6)\",\n        \"rgba(67, 160, 71, 0.5)\",\n        \"rgba(56, 142, 60, 0.4)\",\n        \"rgba(46, 125, 50, 0.3)\"\n      ];\n      \n      const leafG = leafGroup.append(\"g\")\n        .attr(\"class\", \"leaf-base\")\n        .attr(\"transform\", `translate(${leaf.x}, ${leaf.y})`);\n        \n      const leafAnimLayer = leafG.append(\"g\")\n        .attr(\"class\", `floating floating${Math.floor(Math.random() * 8 + 1)}`)\n        .style(\"animation-delay\", `${Math.random() * 3}s`)\n        .style(\"animation-duration\", `${7 + Math.random() * 4}s`);\n        \n      leafAnimLayer.append(\"path\")\n        .attr(\"d\", Utils.generateLeaf(leaf.size))\n        .attr(\"fill\", leafColors[Math.floor(Math.random() * leafColors.length)])\n        .attr(\"transform\", `rotate(${leaf.angle})`)\n        .attr(\"opacity\", 0.5 + Math.random() * 0.3);\n    });\n  };\n\n  // 绘制花瓣\n  const drawFlowerPetals = (container, flower) => {\n    const size = SizeConfig.calculateFlowerSize(flower.score, true);\n    const petals = Array.from({length: SizeConfig.flower.petalCount}, (_, j) => {\n      const angle = j * (360 / SizeConfig.flower.petalCount);\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.95' : '1'}\"\n            ${flower.score === 0 ? 'stroke=\"#AAA\" stroke-width=\"0.5\"' : ''}/>\n      `;\n    }).join('');\n    \n    // 添加花瓣到动画层\n    container.html(petals);\n    \n    // 添加花芯\n    container.append(\"circle\")\n      .attr(\"r\", size * SizeConfig.flower.centerRatio)\n      .attr(\"fill\", getFlowerCenterColor(flower.score))\n      .attr(\"stroke\", \"#FFCDB2\")\n      .attr(\"stroke-width\", 1.5);\n  };\n\n  // 绘制日历视图的花朵\n  const drawCalendarFlowers = (svg, flowers) => {\n    const width = SizeConfig.base.width;\n    const height = SizeConfig.calculateContainerHeight();\n    const titlePadding = SizeConfig.base.titlePadding;\n    const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n    \n    // 优化边距使花朵分布更加均匀\n    const leftMargin = width * 0.08;\n    const topMargin = titlePadding * 0.8;\n    const bottomMargin = height * 0.05;\n    const rightMargin = width * 0.15; // 增加右侧边距，为图例留出空间\n    \n    // 计算可用宽度和高度\n    const usableWidth = width - leftMargin - rightMargin;\n    const usableHeight = height - topMargin - bottomMargin;\n    \n    // 计算月份和日期的间距\n    const monthWidth = usableWidth / 12;\n    const startY = topMargin;\n    const daySpacing = Math.min(usableHeight / 31, 22); // 限制最大间距，避免日期过于分散\n    \n    // 添加背景网格辅助线\n    const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n    \n    // 月份分隔线\n    for (let i = 0; i <= 12; i++) {\n      gridGroup.append(\"line\")\n        .attr(\"class\", \"grid-line\")\n        .attr(\"x1\", leftMargin + i * monthWidth)\n        .attr(\"y1\", topMargin - 20)\n        .attr(\"x2\", leftMargin + i * monthWidth)\n        .attr(\"y2\", topMargin + 31 * daySpacing)\n        .style(\"stroke\", \"rgba(0,0,0,0.05)\")\n        .style(\"stroke-width\", i % 3 === 0 ? 1 : 0.5)\n        .style(\"stroke-dasharray\", i % 3 === 0 ? \"none\" : \"3,3\");\n    }\n    \n    // 每5天的水平分隔线\n    for (let i = 0; i <= 31; i += 5) {\n      gridGroup.append(\"line\")\n        .attr(\"class\", \"grid-line\")\n        .attr(\"x1\", leftMargin - 10)\n        .attr(\"y1\", topMargin + i * daySpacing)\n        .attr(\"x2\", leftMargin + 12 * monthWidth)\n        .attr(\"y2\", topMargin + i * daySpacing)\n        .style(\"stroke\", \"rgba(0,0,0,0.05)\")\n        .style(\"stroke-width\", i % 10 === 0 ? 1 : 0.5)\n        .style(\"stroke-dasharray\", i % 10 === 0 ? \"none\" : \"3,3\");\n    }\n    \n    // 添加月份标签 - 优化字体大小和位置\n    months.forEach((month, i) => {\n      const x = leftMargin + i * monthWidth + (monthWidth / 2);\n      svg.append(\"text\")\n        .attr(\"x\", x)\n        .attr(\"y\", startY - 30)\n        .attr(\"class\", \"month-text\")\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-family\", \"'Montserrat', sans-serif\")\n        .style(\"font-size\", \"14px\")\n        .style(\"font-weight\", \"600\")\n        .style(\"opacity\", \"0.7\")\n        .style(\"fill\", themeColors.text.secondary)\n        .text(month);\n    });\n    \n    // 添加日期标签 - 优化字体大小和位置\n    for (let day = 1; day <= 31; day++) {\n      const formattedDay = day < 10 ? `0${day}` : `${day}`;\n      svg.append(\"text\")\n        .attr(\"x\", leftMargin - 15)\n        .attr(\"y\", startY + (day - 1) * daySpacing)\n        .attr(\"class\", \"day-text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .style(\"font-family\", \"'Montserrat', sans-serif\")\n        .style(\"font-size\", \"12px\")\n        .style(\"font-weight\", \"500\")\n        .style(\"opacity\", day % 5 === 0 ? \"0.7\" : \"0.5\") // 每5天的标签更明显\n        .style(\"fill\", themeColors.text.secondary)\n        .text(formattedDay);\n    }\n\n    // 创建花朵 - 优化花朵大小和位置\n    flowers.forEach(flower => {\n      const x = leftMargin + (flower.month - 1) * monthWidth + (monthWidth / 2); // 修正月份索引从1开始\n      const y = startY + (flower.day - 1) * daySpacing;\n      \n      const flowerG = svg.append(\"g\")\n        .attr(\"class\", \"flower\")\n        .attr(\"transform\", `translate(${x},${y})`);\n      \n      // 绘制花瓣 - 调整花朵大小\n      const size = SizeConfig.calculateFlowerSize(flower.score, false) * 0.8; // 稍微缩小花朵\n      const petals = Array.from({length: 8}, (_, i) => {\n        const angle = i * 45;\n        return `\n          <path d=\"${Utils.generatePetal(size)}\" \n                fill=\"${getColor(flower.score)}\"\n                transform=\"rotate(${angle})\"\n                opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n        `;\n      }).join('');\n      \n      flowerG.html(petals);\n      \n      // 添加花芯\n      flowerG.append(\"circle\")\n        .attr(\"r\", size * SizeConfig.flower.centerRatio)\n        .attr(\"fill\", getFlowerCenterColor(flower.score))\n        .attr(\"stroke\", \"#FFCDB2\")\n        .attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n      \n      // 添加事件处理\n      flowerG\n        .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n        .on(\"mousemove\", handleMouseMove)\n        .on(\"mouseout\", handleMouseOut)\n        .style(\"cursor\", \"pointer\")\n        .style(\"transition\", \"transform 0.2s ease\")\n        .on(\"mouseenter\", function() {\n          d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1.15)`);\n        })\n        .on(\"mouseleave\", function() {\n          d3.select(this).transition().attr(\"transform\", `translate(${x},${y}) scale(1)`);\n        });\n    });\n  };\n\n  return (\n    <SVGContainer theme={themeColors} ref={containerRef}> {/* Ref is attached here */}\n      <svg ref={svgRef} width=\"100%\" height=\"100%\" />\n      {tooltipData && (\n        <Tooltip \n          data={tooltipData} \n          position={tooltipPosition}\n          themeColors={themeColors}\n          getColor={getColor}\n        />\n      )}\n    </SVGContainer>\n  );\n};\n\n// {{ 修改 drawCalendarFlowers 函数签名以接收参数 }}\nconst drawCalendarFlowers = (svg, flowers, { width, height }, themeColors) => {\n  // {{ 使用传入的 width 和 height，移除从 SizeConfig 获取的 width/height }}\n  // const width = SizeConfig.base.width; // 移除\n  // const height = SizeConfig.calculateContainerHeight(); // 移除\n  const titlePadding = SizeConfig.base.titlePadding; // 可以保留用于某些相对计算，或替换为固定值\n  const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n  \n  // {{ 基于传入的 width 和 height (viewBoxHeight) 重新计算边距和可用空间 }}\n  const leftMargin = width * 0.08;\n  const rightMargin = width * 0.15; // 为图例留空间\n  const calendarTopOffset = 60; // 对应 useEffect 中的 calendarTopPadding\n  const calendarBottomOffset = 30; // 对应 useEffect 中的 calendarBottomPadding\n  \n  const usableWidth = width - leftMargin - rightMargin;\n  // const usableHeight = height - topMargin - bottomMargin; // 移除旧计算\n\n  const monthWidth = usableWidth / 12;\n  const startY = calendarTopOffset; // Y 轴起始位置\n  const daySpacing = 22; // {{ 使用与 useEffect 中一致的固定行高 }} \n                        // 或基于传入的 height 计算: (height - calendarTopOffset - calendarBottomOffset) / 31;\n  \n  // 添加背景网格辅助线\n  const gridGroup = svg.append(\"g\").attr(\"class\", \"grid-lines\");\n  \n  // 月份分隔线 (调整 Y 坐标)\n  gridGroup.append(\"line\")\n      .attr(\"y1\", startY - 20) // 相对 startY 调整\n      .attr(\"y2\", startY + 31 * daySpacing); // 相对 startY 调整\n  \n  // 水平分隔线 (调整 Y 坐标)\n  gridGroup.append(\"line\")\n      .attr(\"y1\", startY + i * daySpacing) // 相对 startY 调整\n      .attr(\"y2\", startY + i * daySpacing); // 相对 startY 调整\n      \n  // 月份标签 (调整 Y 坐标)\n  svg.append(\"text\")\n      .attr(\"y\", startY - 30) // 相对 startY 调整\n      // ... 其他属性 ...\n      .style(\"fill\", themeColors.text.secondary) // {{使用传入的 themeColors}}\n      .text(month);\n  \n  // 日期标签 (调整 Y 坐标)\n  svg.append(\"text\")\n      .attr(\"y\", startY + (day - 1) * daySpacing) // 相对 startY 调整\n      // ... 其他属性 ...\n      .style(\"fill\", themeColors.text.secondary) // {{使用传入的 themeColors}}\n      .text(formattedDay);\n\n  // 创建花朵 - 优化花朵大小和位置\n  flowers.forEach(flower => {\n    const x = leftMargin + (flower.month - 1) * monthWidth + (monthWidth / 2); \n    // {{ 使用新的 startY 和 daySpacing 计算 Y 坐标 }}\n    const y = startY + (flower.day - 1) * daySpacing; \n    \n    const flowerG = svg.append(\"g\")\n      .attr(\"class\", \"flower\")\n      .attr(\"transform\", `translate(${x},${y})`);\n    \n    // 绘制花瓣 - 调整花朵大小\n    const size = SizeConfig.calculateFlowerSize(flower.score, false) * 0.8; // 稍微缩小花朵\n    const petals = Array.from({length: 8}, (_, i) => {\n      const angle = i * 45;\n      return `\n        <path d=\"${Utils.generatePetal(size)}\" \n              fill=\"${getColor(flower.score)}\"\n              transform=\"rotate(${angle})\"\n              opacity=\"${flower.score === 0 ? '0.85' : '0.95'}\"/>\n      `;\n    }).join('');\n    \n    flowerG.html(petals);\n    \n    // 添加花芯\n    flowerG.append(\"circle\")\n      .attr(\"r\", size * SizeConfig.flower.centerRatio)\n      .attr(\"fill\", getFlowerCenterColor(flower.score))\n      .attr(\"stroke\", \"#FFCDB2\")\n      .attr(\"stroke-width\", flower.score === 0 ? 1.5 : 1.2);\n    \n    // 添加事件处理\n    flowerG\n      .on(\"mouseover\", (event) => handleMouseOver(event, flower))\n      .on(\"mousemove\", handleMouseMove)\n      .on(\"mouseout\", handleMouseOut)\n      .style(\"cursor\", \"pointer\")\n      .style(\"transition\", \"transform 0.2s ease\")\n      .on(\"mouseenter\", function() {\n        d3.select(this).transition()\n          .attr(\"transform\", `translate(${x},${y}) scale(1.15)`);\n      })\n      .on(\"mouseleave\", function() {\n        d3.select(this).transition()\n          .attr(\"transform\", `translate(${x},${y}) scale(1)`);\n      });\n  });\n};\n\nexport default FlowerView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}