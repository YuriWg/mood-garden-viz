{"ast":null,"code":"// 模拟数据生成器\nexport const generateMockData = () => {\n  const flowers = [];\n  const currentYear = new Date().getFullYear();\n\n  // 斯多葛名言\n  const stoicQuotes = [\"不要追求一切顺利，而要追求内心强大，能够承受一切。\", \"我们无法控制外部事件，但我们可以控制我们对它们的反应。\", \"真正的自由来自于对自己欲望的控制。\", \"生活不在于拥有什么，而在于经历什么。\", \"痛苦不是来自事件本身，而是来自你对事件的判断。\", \"如果你被外物所困扰，问题不在于事物本身，而在于你对它们的判断。\", \"我们的生活就是我们思想的产物。\", \"不要解释你的哲学，实践它。\", \"真正的财富是对少的满足。\", \"我们不能选择外部环境，但我们可以选择如何应对。\", \"幸福不在于拥有很多，而在于需要很少。\", \"最好的复仇是不要变得和伤害你的人一样。\", \"如果一个人不知道他要驶向哪个港口，那么任何风都不是顺风。\", \"生命的长短不在于时间的长短，而在于我们如何使用它。\", \"不要追求快乐，追求内心的平静。\"];\n\n  // 心情日记标题\n  const moodTitles = [\"今日感悟\", \"心情记录\", \"日常思考\", \"生活点滴\", \"心灵小憩\", \"一天所得\", \"情绪笔记\", \"内心独白\", \"日记一则\", \"心情速写\", \"今日所思\", \"片刻记录\", \"心境随笔\", \"日常观察\", \"心情小记\", \"思绪整理\", \"今日心情\", \"生活感触\", \"内心对话\", \"情绪流动\"];\n\n  // 心情引用\n  const moodQuotes = [\"今天阳光明媚，心情也跟着好起来了。\", \"工作中遇到了一些挑战，但我相信自己能够克服。\", \"和朋友聊天，感到被理解的温暖。\", \"读了一本好书，获得了新的视角。\", \"今天有点疲惫，但依然感恩生活中的美好。\", \"遇到了一些挫折，需要调整心态。\", \"雨天的宁静给了我思考的空间。\", \"完成了一项任务，感到满足。\", \"今天情绪有些低落，需要给自己一些时间。\", \"和家人共度美好时光，心里充满幸福感。\", \"工作上取得了小小的进步，很开心。\", \"今天天气不好，心情也受到了影响。\", \"遇到了意料之外的惊喜，心情大好。\", \"思考了一些人生问题，感到有些迷茫。\", \"尝试了新事物，感到兴奋和充实。\", \"今天有点焦虑，需要放松一下。\", \"和老朋友重聚，回忆涌上心头。\", \"解决了一个困扰已久的问题，如释重负。\", \"今天的日落特别美，让我感到平静。\", \"经历了一些挑战，但也学到了宝贵的经验。\"];\n\n  // 生成随机日期（当年的随机日期）\n  const getRandomDate = () => {\n    const month = Math.floor(Math.random() * 12) + 1;\n    let maxDay = 31;\n    if ([4, 6, 9, 11].includes(month)) maxDay = 30;else if (month === 2) {\n      // 检查是否为闰年\n      maxDay = currentYear % 4 === 0 && currentYear % 100 !== 0 || currentYear % 400 === 0 ? 29 : 28;\n    }\n    const day = Math.floor(Math.random() * maxDay) + 1;\n    return {\n      month,\n      day\n    };\n  };\n\n  // 生成随机心情分数 (-5 到 5)\n  const getRandomScore = () => {\n    return Math.floor(Math.random() * 11) - 5;\n  };\n\n  // 生成随机花朵数据\n  const generateRandomFlowers = count => {\n    const usedDates = new Set(); // 用于跟踪已使用的日期\n\n    for (let i = 0; i < count; i++) {\n      let date;\n      let dateKey;\n\n      // 确保日期不重复\n      do {\n        date = getRandomDate();\n        dateKey = `${date.month}-${date.day}`;\n      } while (usedDates.has(dateKey));\n      usedDates.add(dateKey);\n      const score = getRandomScore();\n      const flower = {\n        id: `flower-${i}`,\n        month: date.month,\n        day: date.day,\n        score: score,\n        title: moodTitles[Math.floor(Math.random() * moodTitles.length)],\n        quote: moodQuotes[Math.floor(Math.random() * moodQuotes.length)],\n        stoic: Math.random() > 0.3 ? stoicQuotes[Math.floor(Math.random() * stoicQuotes.length)] : null\n      };\n      flowers.push(flower);\n    }\n    return flowers;\n  };\n\n  // 生成50-100朵随机花\n  const flowerCount = Math.floor(Math.random() * 51) + 50;\n  return generateRandomFlowers(flowerCount);\n};\n\n// 生成特定日期的花朵数据\nexport const generateFlowerForDate = (month, day, options = {}) => {\n  const {\n    score = Math.floor(Math.random() * 11) - 5,\n    title = \"今日心情\",\n    quote = \"\",\n    stoic = null\n  } = options;\n  return {\n    id: `flower-${Date.now()}`,\n    month,\n    day,\n    score,\n    title,\n    quote,\n    stoic\n  };\n};","map":{"version":3,"names":["generateMockData","flowers","currentYear","Date","getFullYear","stoicQuotes","moodTitles","moodQuotes","getRandomDate","month","Math","floor","random","maxDay","includes","day","getRandomScore","generateRandomFlowers","count","usedDates","Set","i","date","dateKey","has","add","score","flower","id","title","length","quote","stoic","push","flowerCount","generateFlowerForDate","options","now"],"sources":["/Users/wyl/Documents/GitHub/DataViz Portfolio/mood-garden-viz/src/data/mockData.js"],"sourcesContent":["// 模拟数据生成器\nexport const generateMockData = () => {\n  const flowers = [];\n  const currentYear = new Date().getFullYear();\n  \n  // 斯多葛名言\n  const stoicQuotes = [\n    \"不要追求一切顺利，而要追求内心强大，能够承受一切。\",\n    \"我们无法控制外部事件，但我们可以控制我们对它们的反应。\",\n    \"真正的自由来自于对自己欲望的控制。\",\n    \"生活不在于拥有什么，而在于经历什么。\",\n    \"痛苦不是来自事件本身，而是来自你对事件的判断。\",\n    \"如果你被外物所困扰，问题不在于事物本身，而在于你对它们的判断。\",\n    \"我们的生活就是我们思想的产物。\",\n    \"不要解释你的哲学，实践它。\",\n    \"真正的财富是对少的满足。\",\n    \"我们不能选择外部环境，但我们可以选择如何应对。\",\n    \"幸福不在于拥有很多，而在于需要很少。\",\n    \"最好的复仇是不要变得和伤害你的人一样。\",\n    \"如果一个人不知道他要驶向哪个港口，那么任何风都不是顺风。\",\n    \"生命的长短不在于时间的长短，而在于我们如何使用它。\",\n    \"不要追求快乐，追求内心的平静。\"\n  ];\n  \n  // 心情日记标题\n  const moodTitles = [\n    \"今日感悟\", \"心情记录\", \"日常思考\", \"生活点滴\", \"心灵小憩\",\n    \"一天所得\", \"情绪笔记\", \"内心独白\", \"日记一则\", \"心情速写\",\n    \"今日所思\", \"片刻记录\", \"心境随笔\", \"日常观察\", \"心情小记\",\n    \"思绪整理\", \"今日心情\", \"生活感触\", \"内心对话\", \"情绪流动\"\n  ];\n  \n  // 心情引用\n  const moodQuotes = [\n    \"今天阳光明媚，心情也跟着好起来了。\",\n    \"工作中遇到了一些挑战，但我相信自己能够克服。\",\n    \"和朋友聊天，感到被理解的温暖。\",\n    \"读了一本好书，获得了新的视角。\",\n    \"今天有点疲惫，但依然感恩生活中的美好。\",\n    \"遇到了一些挫折，需要调整心态。\",\n    \"雨天的宁静给了我思考的空间。\",\n    \"完成了一项任务，感到满足。\",\n    \"今天情绪有些低落，需要给自己一些时间。\",\n    \"和家人共度美好时光，心里充满幸福感。\",\n    \"工作上取得了小小的进步，很开心。\",\n    \"今天天气不好，心情也受到了影响。\",\n    \"遇到了意料之外的惊喜，心情大好。\",\n    \"思考了一些人生问题，感到有些迷茫。\",\n    \"尝试了新事物，感到兴奋和充实。\",\n    \"今天有点焦虑，需要放松一下。\",\n    \"和老朋友重聚，回忆涌上心头。\",\n    \"解决了一个困扰已久的问题，如释重负。\",\n    \"今天的日落特别美，让我感到平静。\",\n    \"经历了一些挑战，但也学到了宝贵的经验。\"\n  ];\n  \n  // 生成随机日期（当年的随机日期）\n  const getRandomDate = () => {\n    const month = Math.floor(Math.random() * 12) + 1;\n    let maxDay = 31;\n    if ([4, 6, 9, 11].includes(month)) maxDay = 30;\n    else if (month === 2) {\n      // 检查是否为闰年\n      maxDay = ((currentYear % 4 === 0 && currentYear % 100 !== 0) || currentYear % 400 === 0) ? 29 : 28;\n    }\n    \n    const day = Math.floor(Math.random() * maxDay) + 1;\n    return { month, day };\n  };\n  \n  // 生成随机心情分数 (-5 到 5)\n  const getRandomScore = () => {\n    return Math.floor(Math.random() * 11) - 5;\n  };\n  \n  // 生成随机花朵数据\n  const generateRandomFlowers = (count) => {\n    const usedDates = new Set(); // 用于跟踪已使用的日期\n    \n    for (let i = 0; i < count; i++) {\n      let date;\n      let dateKey;\n      \n      // 确保日期不重复\n      do {\n        date = getRandomDate();\n        dateKey = `${date.month}-${date.day}`;\n      } while (usedDates.has(dateKey));\n      \n      usedDates.add(dateKey);\n      \n      const score = getRandomScore();\n      const flower = {\n        id: `flower-${i}`,\n        month: date.month,\n        day: date.day,\n        score: score,\n        title: moodTitles[Math.floor(Math.random() * moodTitles.length)],\n        quote: moodQuotes[Math.floor(Math.random() * moodQuotes.length)],\n        stoic: Math.random() > 0.3 ? stoicQuotes[Math.floor(Math.random() * stoicQuotes.length)] : null\n      };\n      \n      flowers.push(flower);\n    }\n    \n    return flowers;\n  };\n  \n  // 生成50-100朵随机花\n  const flowerCount = Math.floor(Math.random() * 51) + 50;\n  return generateRandomFlowers(flowerCount);\n};\n\n// 生成特定日期的花朵数据\nexport const generateFlowerForDate = (month, day, options = {}) => {\n  const {\n    score = Math.floor(Math.random() * 11) - 5,\n    title = \"今日心情\",\n    quote = \"\",\n    stoic = null\n  } = options;\n  \n  return {\n    id: `flower-${Date.now()}`,\n    month,\n    day,\n    score,\n    title,\n    quote,\n    stoic\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}